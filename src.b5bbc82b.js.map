{"version":3,"sources":["data/dataStore.js","framework/element.js","data/dataSettings.js","utils.js","data/imagesAPI.js","data/mediaData.js","framework/renderer.js","components/MediaTypeSwitcher/MediaTypeSwitcher.js","components/MediaTypeSwitcher/index.js","components/SearchInput/SearchInput.js","components/SearchInput/index.js","components/SearchButton/SearchButton.js","components/SearchButton/index.js","components/Logo/Logo.js","components/Logo/index.js","components/SearchLayout/SearchLayout.js","components/SearchLayout/index.js","components/FiltersByCategories/FilterItem.js","components/FiltersByCategories/FilterBlock.js","components/FiltersByCategories/Filters.js","components/FiltersByCategories/FiltersByCategories.js","components/FiltersByCategories/index.js","components/SortSelect/Option.js","components/SortSelect/SortOptions.js","components/SortSelect/SortSelect.js","components/SortSelect/index.js","components/SelectedFiltersLayout/SelectedFilter.js","components/SelectedFiltersLayout/SelectedFilters.js","components/SelectedFiltersLayout/FilterButton.js","components/SelectedFiltersLayout/SelectedFiltersLayout.js","components/SelectedFiltersLayout/index.js","components/MediaCards/Card.js","components/MediaCards/MediaCards.js","components/MediaCards/index.js","components/NoResults/NoResults.js","components/NoResults/index.js","components/ResponseLayout/ResponseContent.js","components/ResponseLayout/ResponseLayout.js","components/ResponseLayout/index.js","components/Loader/Loader.js","components/Loader/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","requestMade","searchValue","mediaTypes","filters","selectedFiltersList","sortingSet","filteredData","filtersSelected","performFiltering","sortingOption","totalHits","allRequestsMade","lastPage","isDataLoading","noResults","renderingData","responseData","isError","focusOnFilter","errorMessage","createElement","tag","props","children","element","DocumentFragment","document","Object","entries","forEach","name","value","startsWith","toLowerCase","window","addEventListener","substr","includes","removeAttribute","setAttribute","keys","properties","style","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","FILTERS_BY_MEDIA_TYPE","video","audio","image","FILTERS_TEXT","keywords","location","center","creator","bitrate","colorSpace","resolutionOrigin","album","MEDIA_TYPE_SORTING_OPTIONS","SORTING_OPTIONS_TEXT","duration","date","sizeValue","framerate","bitrateValue","resolutionValue","MEDATADA_KEYS_BY_MEDIA_TYPE","size","resolution","hasFilteringParameters","filter","length","isElementInArray","data","some","dataItem","toUpperCase","getNumberFromString","parseInt","undefined","getSeconds","Date","getTime","removeSpacesFromLink","link","split","join","replaceProtocolExtension","replace","fetchData","url","storage","fetch","catch","err","setError","flat","array","reduce","acc","current","concat","getParametersValueFromNodeList","parameter","nodeList","from","map","item","removeClass","className","classList","remove","addClass","add","getItemByStringPattern","str","findIndex","keywordIsASingleWord","keyword","requestMedia","searchInputValue","getElementById","requestURL","createRequestURL","getDataPages","getAndPrepareMetadataForRendering","requestCollectionAndMetadata","flattenedData","collectionData","getCollectionData","metadataFromLinks","getMetadata","pagesCounter","then","json","responseBody","collection","links","nextPageLinkIndex","hasPage","hasNextPage","href","items","getAllPromisesData","getMetadataPromisesFromCollectionList","collectionDataItem","i","metadataLink","metadata","Promise","all","responseDataItem","linksList","linkItem","rel","searchByTerm","preventDefault","resetState","openHomePage","styles","no_image__background","body","updateMediaTypes","input","inputIndex","indexOf","push","splice","sortMedia","option","direction","target","sortByDirection","filterItems","categorie","selectFilter","getAttribute","isFilterSelected","removeFilter","filterName","deleteIndex","updateFocusState","querySelector","focus","isOptionNeeded","mediaType","ascending","sort","next","descending","getResponseData","getConciseContentFromRespond","previewImage","date_created","media_type","title","secondary_creator","nasa_id","getOnlySingleWordKeyword","id","getCreatorsList","getFiltersAndUpdate","getFiltersFromMetadata","changeStateToRequestMade","getFiltersFromLists","metadataItem","getFiltersDataFromMetadata","mediaMetadata","mediaKeysNeeded","key","transformKeyValueToNumber","filtersContainer","updateFilterValue","getMediaTypes","querySelectorAll","setSelectedMediaTypes","metadataValue","getImageAlbum","getDurationValueFromString","getSizeInKBFromString","getResolutionFromString","height","width","splitStringWithDifferentSeparator","time","match","getSecondsFromDurationValue","separatedTimeValues","parseDuration","hours","minutes","seconds","number","unit","stringToSplit","errMessage","Component","Target","renderApp","componentFunction","innerHTML","MediaTypeSwitcher","label","overflow","button","wrapper","event","SearchInput","search__input","SearchButton","search__button","Logo","require","logo","SearchLayout","searchPosition","searchPositionClass","form_top","form_middle","searchClasses","form__wrapper","form","search__box","FilterItem","filterCounter","filter__label","text","filter__counter","FilterBlock","filter__heading","filter__item_wrapper","filterContent","Filters","FiltersByCategories","filters__wrapper","Option","sortType","SortOptions","SortSelect","SelectedFilter","filterSelected","filter__selected_container","filter__selected","remove__filter","SelectedFilters","FilterButton","filter__button","SelectedFiltersLayout","selected__filters","Card","cardType","cardClass","card__item","backgroundURL","backgroundImage","MediaCards","NoResults","wrap","no_results","ResponseContent","cards__wrapper","sort_hits_wrapper","total_hits","ResponseLayout","response__layout","Loader","loader","App"],"mappings":"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","file":"src.b5bbc82b.js","sourceRoot":"../src","sourcesContent":["export const dataStore = {\n  requestMade: false,\n  searchValue: null,\n  mediaTypes: [],\n  filters: {},\n  selectedFiltersList: [],\n  sortingSet: false,\n  filteredData: [],\n  filtersSelected: false,\n  performFiltering: false,\n  sortingOption: false,\n  totalHits: null,\n  allRequestsMade: false,\n  lastPage: false,\n  isDataLoading: false,\n  noResults: false,\n  renderingData: false,\n  responseData: [],\n  isError: false,\n  focusOnFilter: null,\n  errorMessage: '',\n};\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (typeof tag === 'function') {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return tag({ ...props, children }, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked', 'selected'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n          // If style property is given then add styles to object\n          if (name === 'style') {\n            if (typeof value === 'object') {\n              Object.keys(value).forEach(properties => {\n                element.style[properties] = value[properties];\n              });\n            }\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","export const FILTERS_BY_MEDIA_TYPE = {\n  video: ['keywords', 'location', 'creator'],\n  audio: ['keywords', 'center', 'bitrate'],\n  image: ['keywords', 'creator', 'center', 'colorSpace', 'resolutionOrigin', 'album'],\n};\n\nexport const FILTERS_TEXT = {\n  keywords: 'key terms',\n  location: 'location',\n  center: 'center',\n  creator: 'media creator',\n  bitrate: 'audio bitrate',\n  colorSpace: 'image color space',\n  resolutionOrigin: 'image resolution',\n  album: 'image album',\n};\n\nexport const MEDIA_TYPE_SORTING_OPTIONS = {\n  video: ['duration', 'date', 'sizeValue', 'framerate'],\n  audio: ['duration', 'date', 'sizeValue', 'bitrateValue'],\n  image: ['date', 'sizeValue', 'resolutionValue'],\n};\n\nexport const SORTING_OPTIONS_TEXT = {\n  duration: 'duration',\n  date: 'creation date',\n  sizeValue: 'file size',\n  framerate: 'frame rate',\n  bitrateValue: 'bitrate',\n  resolutionValue: 'resolution',\n};\n\nexport const MEDATADA_KEYS_BY_MEDIA_TYPE = {\n  video: {\n    location: 'AVAIL:Location',\n    framerate: 'QuickTime:VideoFrameRate',\n    duration: 'QuickTime:Duration',\n    size: 'File:FileSize',\n  },\n  image: {\n    colorSpace: 'EXIF:ColorSpace',\n    size: 'File:FileSize',\n    resolution: 'Composite:ImageSize',\n    album: 'AVAIL:Album',\n  },\n  audio: {\n    bitrate: 'MPEG:AudioBitrate',\n    duration: 'Composite:Duration',\n    size: 'File:FileSize',\n  },\n};\n","export function hasFilteringParameters(filter) {\n  return Object.keys(filter).length;\n}\n\nexport function isElementInArray(data, element) {\n  return data.some(dataItem => dataItem.toUpperCase() === element);\n}\n\nexport function getNumberFromString(value) {\n  return value ? parseInt(value) : undefined;\n}\n\nexport function getSeconds(date) {\n  return new Date(date).getTime();\n}\n\nexport function removeSpacesFromLink(link) {\n  return link !== null ? link.split(' ').join('%20') : null;\n}\n\nexport function replaceProtocolExtension(link) {\n  return link.replace(/(http)/gm, 'https');\n}\n\nexport function fetchData(url, storage) {\n  return fetch(url).catch(err => setError(err, storage));\n}\n\nexport function flat(array) {\n  return array.reduce((acc, current) => acc.concat(current), []);\n}\n\nexport function getParametersValueFromNodeList(parameter, nodeList) {\n  return Array.from(nodeList).map(item => item[parameter]);\n}\n\nexport function removeClass(className, element) {\n  element.classList.remove(className);\n}\n\nexport function addClass(className, element) {\n  element.classList.add(className);\n}\n\nexport function getItemByStringPattern(str, data) {\n  return data[data.findIndex(dataItem => dataItem.includes(str))];\n}\n\nexport function keywordIsASingleWord(keyword) {\n  return keyword.split(' ').length === 1 && !parseInt(keyword);\n}\n","import {\n  getMediaTypes,\n  setSelectedMediaTypes,\n  getFiltersAndUpdate,\n  getResponseData,\n  setError,\n} from './mediaData';\nimport renderApp from '../framework/renderer';\n\nimport { replaceProtocolExtension, fetchData, getItemByStringPattern } from '../utils';\n\nexport async function requestMedia(storage) {\n  const searchInputValue = document.getElementById('searchInput').value,\n    mediaTypes = getMediaTypes();\n  let requestURL = createRequestURL(searchInputValue, mediaTypes);\n  storage.mediaTypes = setSelectedMediaTypes(mediaTypes);\n  storage.searchValue = searchInputValue;\n  storage.responseData = [];\n\n  renderApp();\n\n  await getDataPages(storage, requestURL);\n  await getAndPrepareMetadataForRendering(storage);\n}\n\nexport async function requestCollectionAndMetadata(storage) {\n  if (!storage.isError) {\n    storage.flattenedData = getResponseData(storage);\n    if (!storage.flattenedData.length) storage.noResults = true;\n    const collectionData = await getCollectionData(storage.flattenedData, storage),\n      metadataFromLinks = await getMetadata(storage.flattenedData, collectionData, storage);\n    return metadataFromLinks;\n  }\n}\n\nasync function getDataPages(storage, requestURL) {\n  let pagesCounter = 0;\n  while (!storage.allRequestsMade) {\n    await fetch(requestURL)\n      .then(data => data.json())\n      .then(responseBody => {\n        if (responseBody.collection.links) {\n          const { nextPageLinkIndex, hasPage } = hasNextPage(responseBody.collection.links);\n          if (pagesCounter === 2 || !hasPage) {\n            storage.allRequestsMade = true;\n          } else {\n            requestURL = replaceProtocolExtension(\n              responseBody.collection.links[nextPageLinkIndex].href,\n            );\n            pagesCounter++;\n          }\n        } else {\n          storage.allRequestsMade = true;\n        }\n        storage.responseData = storage.responseData.concat(responseBody.collection.items);\n      })\n      .catch(err => {\n        setError(err, storage);\n      });\n  }\n}\n\nexport async function getAndPrepareMetadataForRendering(storage) {\n  const metadataFromLinks = await requestCollectionAndMetadata(storage);\n  await getFiltersAndUpdate(storage, metadataFromLinks);\n  renderApp();\n}\n\nfunction getCollectionData(data, storage) {\n  const requests = data.map(dataItem => fetchData(dataItem.href, storage));\n  return getAllPromisesData(requests, storage);\n}\n\nfunction getMetadataPromisesFromCollectionList(data, collectionData, storage) {\n  return collectionData.map((collectionDataItem, i) => {\n    const metadataLink = getItemByStringPattern('metadata.json', collectionDataItem);\n    data[i].metadata = replaceProtocolExtension(metadataLink);\n    return fetchData(data[i].metadata, storage);\n  });\n}\n\nfunction getMetadata(data, collectionData, storage) {\n  const metadataFetchedLinks = getMetadataPromisesFromCollectionList(data, collectionData, storage);\n  return getAllPromisesData(metadataFetchedLinks, storage);\n}\n\nfunction getAllPromisesData(data, storage) {\n  return Promise.all(data)\n    .then(responseData =>\n      Promise.all(responseData.map(responseDataItem => responseDataItem.json())),\n    )\n    .catch(err => {\n      setError(err, storage);\n    });\n}\n\nfunction hasNextPage(linksList) {\n  const nextPageLinkIndex = linksList.findIndex((linkItem, i) => linkItem.rel === 'next');\n  return nextPageLinkIndex !== -1\n    ? { hasPage: true, nextPageLinkIndex }\n    : { hasPage: false, nextPageLinkIndex };\n}\n\nfunction createRequestURL(searchInputValue, mediaTypes) {\n  const API_URL = 'https://images-api.nasa.gov/search';\n  return `${API_URL}?q=${searchInputValue}${\n    mediaTypes.length ? `&media_type=${mediaTypes.join(',')}` : ''\n  }`;\n}\n","import {\n  MEDIA_TYPE_SORTING_OPTIONS,\n  MEDATADA_KEYS_BY_MEDIA_TYPE,\n  SORTING_OPTIONS_TEXT,\n  FILTERS_TEXT,\n  FILTERS_BY_MEDIA_TYPE,\n  RESPONSE_DATA_FILES,\n} from './dataSettings';\nimport {\n  hasFilteringParameters,\n  getNumberFromString,\n  getSeconds,\n  getParametersValueFromNodeList,\n  removeClass,\n  addClass,\n  removeSpacesFromLink,\n  isElementInArray,\n  keywordIsASingleWord,\n} from '../utils';\nimport { requestMedia } from './imagesAPI';\nimport styles from '/style.css';\nimport renderApp from '../framework/renderer';\n\nexport function searchByTerm(storage, e) {\n  e.preventDefault();\n  resetState(storage);\n  storage.isDataLoading = true;\n  requestMedia(storage);\n}\n\nexport function openHomePage(storage, e) {\n  e.preventDefault();\n  storage.requestMade = false;\n  storage.searchValue = null;\n  storage.mediaTypes = [];\n  resetState(storage);\n  removeClass(`${styles.no_image__background}`, document.body);\n  renderApp();\n}\n\nexport function updateMediaTypes(storage, input) {\n  const inputIndex = storage.mediaTypes.indexOf(input.value);\n  if (inputIndex === -1) {\n    storage.mediaTypes.push(input.value);\n  } else {\n    storage.mediaTypes.splice(inputIndex, 1);\n  }\n  renderApp();\n}\n\nexport function sortMedia(storage, e) {\n  const data = storage.filtersSelected ? storage.filteredData : storage.flattenedData,\n    [option, direction] = e.target.value.split('_');\n  storage.sortingOption = e.target.value;\n  storage.sortingSet = true;\n  sortByDirection[direction](data, option);\n}\n\nexport function filterItems(storage) {\n  storage.performFiltering = true;\n  storage.filteredData = [];\n  storage.selectedFiltersList.forEach(filter => {\n    const categorie = filter.categorie;\n    storage.flattenedData.forEach(dataItem => {\n      if (storage.filteredData.indexOf(dataItem) === -1 && dataItem[categorie]) {\n        if (Array.isArray(dataItem[categorie])) {\n          if (isElementInArray(dataItem[categorie], filter.value)) {\n            storage.filteredData.push(dataItem);\n          }\n        } else {\n          if (dataItem[categorie].toUpperCase() === filter.value) {\n            storage.filteredData.push(dataItem);\n          }\n        }\n      }\n    });\n  });\n  storage.focusOnFilter = null;\n  storage.totalHits = storage.filteredData.length;\n}\n\nexport function selectFilter(storage, filter) {\n  const { value } = filter,\n    categorie = filter.getAttribute('data-categorie');\n  storage.filtersSelected = true;\n  if (!isFilterSelected(storage.selectedFiltersList, value, categorie)) {\n    storage.selectedFiltersList.push({ value, categorie });\n    storage.focusOnFilter = filter.name;\n  } else {\n    removeFilter(storage, filter);\n    storage.focusOnFilter = null;\n  }\n  renderApp();\n}\n\nexport function removeFilter(storage, filter) {\n  const { value: filterName } = filter,\n    categorie = filter.getAttribute('data-categorie'),\n    deleteIndex = storage.selectedFiltersList.findIndex(\n      element => element.value === filterName && categorie === element.categorie,\n    );\n  storage.focusOnFilter = null;\n  storage.selectedFiltersList.splice(deleteIndex, 1);\n  if (!storage.selectedFiltersList.length) {\n    storage.performFiltering = false;\n    storage.filtersSelected = false;\n    storage.totalHits = storage.flattenedData.length;\n  }\n}\n\nexport function updateFocusState() {\n  if (window.data.focusOnFilter !== null)\n    document.querySelector(`[name=\"${window.data.focusOnFilter}\"]`).focus();\n}\n\nexport function isFilterSelected(filtersSelected, filterName, categorie) {\n  return filtersSelected.some(\n    filter => filter.categorie === categorie && filter.value === filterName,\n  );\n}\n\nexport function isOptionNeeded(storage, option) {\n  return storage.mediaTypes.some(mediaType => {\n    return MEDIA_TYPE_SORTING_OPTIONS[mediaType].indexOf(option) !== -1;\n  });\n}\n\nexport const sortByDirection = {\n  ascending: function (data, option) {\n    data.sort((current, next) => (current[option] ? current[option] - next[option] : true));\n  },\n  descending: function (data, option) {\n    data.sort((current, next) => (current[option] ? next[option] - current[option] : true));\n  },\n};\n\nexport function getResponseData(storage) {\n  return getConciseContentFromRespond(storage.responseData);\n}\n\nfunction getConciseContentFromRespond(items) {\n  return items.map(item => {\n    const { data, href, links: [{ href: previewImage }] = [{ href: null }] } = item;\n    const {\n      keywords,\n      date_created,\n      center,\n      media_type,\n      title,\n      secondary_creator = null,\n      nasa_id,\n    } = data[0];\n    return {\n      keywords: getOnlySingleWordKeyword(keywords),\n      date: getSeconds(date_created),\n      id: nasa_id,\n      title,\n      center,\n      previewImage: removeSpacesFromLink(previewImage),\n      href,\n      mediaType: media_type,\n      creator: getCreatorsList(secondary_creator),\n    };\n  });\n}\n\nexport async function getFiltersAndUpdate(storage, metadata) {\n  await getFiltersFromMetadata(metadata, storage.flattenedData);\n  storage.isDataLoading = false;\n  changeStateToRequestMade(storage);\n  getFiltersFromLists(storage.flattenedData, storage.mediaTypes, storage.filters);\n  storage.totalHits = storage.flattenedData.length;\n}\n\nfunction getFiltersFromMetadata(metadata, data) {\n  return metadata.forEach((metadataItem, i) => {\n    getFiltersDataFromMetadata(metadataItem, data[i]);\n  });\n}\n\nfunction getFiltersDataFromMetadata(responseBody, dataItem) {\n  const mediaMetadata = responseBody,\n    mediaKeysNeeded = MEDATADA_KEYS_BY_MEDIA_TYPE[dataItem.mediaType];\n  Object.keys(mediaKeysNeeded).forEach(key => {\n    transformKeyValueToNumber(key, dataItem, mediaMetadata[mediaKeysNeeded[key]]);\n  });\n}\n\nfunction getFiltersFromLists(data, mediaTypes, filtersContainer) {\n  data.forEach(dataItem => {\n    mediaTypes.forEach(mediaType => {\n      FILTERS_BY_MEDIA_TYPE[mediaType].forEach(key => {\n        if (!filtersContainer[key]) {\n          filtersContainer[key] = {};\n        }\n        if (dataItem[key]) {\n          if (Array.isArray(dataItem[key])) {\n            dataItem[key].forEach(keyword => {\n              if (mediaType === dataItem.mediaType) {\n                updateFilterValue(filtersContainer[key], keyword);\n              }\n            });\n          } else {\n            updateFilterValue(filtersContainer[key], dataItem[key]);\n          }\n        }\n      });\n    });\n  });\n}\n\nfunction updateFilterValue(filtersContainer, keyword) {\n  if (keyword !== undefined) {\n    if (!filtersContainer[keyword.toUpperCase()]) {\n      filtersContainer[keyword.toUpperCase()] = 1;\n    } else {\n      filtersContainer[keyword.toUpperCase()]++;\n    }\n  }\n}\n\nexport function getMediaTypes() {\n  const mediaTypes = document.querySelectorAll('input[name=\"mediaType\"]:checked');\n  return getParametersValueFromNodeList('value', mediaTypes);\n}\n\nexport function setSelectedMediaTypes(mediaTypes) {\n  return mediaTypes.length ? mediaTypes : null;\n}\n\nfunction getOnlySingleWordKeyword(keywords) {\n  return keywords ? keywords.filter(keyword => keywordIsASingleWord(keyword)) : 'unknown';\n}\n\nfunction transformKeyValueToNumber(key, dataItem, metadataValue) {\n  if (metadataValue) {\n    switch (key) {\n      case 'album':\n        dataItem[key] = getImageAlbum(metadataValue);\n        break;\n      case 'duration':\n        dataItem[key] = getDurationValueFromString(metadataValue);\n        break;\n      case 'size':\n        dataItem[key] = getSizeInKBFromString(metadataValue);\n        dataItem[`${key}Value`] = dataItem[key].value;\n        break;\n      case 'bitrate':\n        dataItem[`${key}Value`] = getNumberFromString(metadataValue);\n        dataItem[key] = metadataValue;\n        break;\n      case 'resolution':\n        dataItem[key] = getResolutionFromString(metadataValue);\n        dataItem[`${key}Origin`] = metadataValue;\n        dataItem[`${key}Value`] = dataItem[key].height * dataItem[key].width;\n        break;\n      default:\n        dataItem[key] = metadataValue;\n    }\n  } else {\n    dataItem[key] = metadataValue;\n  }\n}\n\nfunction getCreatorsList(creator) {\n  return creator !== null ? splitStringWithDifferentSeparator(creator) : ['unknown'];\n}\n\nfunction getDurationValueFromString(duration) {\n  if (duration && duration !== null) {\n    const time = duration.match(/\\d{1,}:\\d{2}:\\d{2}/g);\n    return time !== null ? getSecondsFromDurationValue(time[0]) : undefined;\n  }\n  return undefined;\n}\n\nfunction getSecondsFromDurationValue(time) {\n  const separatedTimeValues = parseDuration(time),\n    [hours, minutes, seconds] = separatedTimeValues;\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\nfunction parseDuration(time) {\n  return time.split(':').map(item => parseInt(item));\n}\n\nfunction getImageAlbum(value) {\n  return !value ? 'unknown' : value;\n}\n\nfunction getSizeInKBFromString(value) {\n  const [number, unit] = value.split(' ');\n  switch (unit.toUpperCase()) {\n    case 'KB':\n      return { number, unit, value: getNumberFromString(number) };\n    case 'MB':\n      return { number, unit, value: getNumberFromString(number) * 1024 };\n    case 'GB':\n      return { number, unit, value: getNumberFromString(number) * 1024 * 1024 };\n  }\n}\n\nfunction getResolutionFromString(value) {\n  const [height, width] = value.toLowerCase().split('x');\n  return { height: getNumberFromString(height), width: getNumberFromString(width), value };\n}\n\nfunction splitStringWithDifferentSeparator(stringToSplit) {\n  stringToSplit = stringToSplit.replace(/[<>]||(\\/>)/gm, '');\n  if (stringToSplit.indexOf('/') === -1) {\n    return stringToSplit.split(', ');\n  } else {\n    return stringToSplit.split('/');\n  }\n}\n\nexport function setError(errMessage, storage) {\n  storage.isDataLoading = false;\n  storage.allRequestsMade = true;\n  storage.isError = true;\n  storage.errorMessage = `Ooops!..${errMessage}.<br/>Try to reload the page`;\n  renderApp();\n}\n\nexport function resetState(storage) {\n  storage.totalHits = null;\n  storage.sortingSet = false;\n  storage.requestMade = false;\n  storage.focusOnFilter = null;\n  storage.selectedFiltersList = [];\n  storage.performFiltering = false;\n  storage.filtersSelected = false;\n  storage.filters = {};\n  storage.noResults = false;\n  storage.allRequestsMade = false;\n}\n\nfunction changeStateToRequestMade(storage) {\n  storage.requestMade = true;\n  addClass(`${styles.no_image__background}`, document.body);\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\n\nimport { createElement } from './element';\nimport { updateFocusState } from '../data/mediaData';\n\nlet Component, Target;\n\nexport default function renderApp(componentFunction = null, target = null) {\n  if (componentFunction) Component = componentFunction;\n  if (target) Target = target;\n  Target.innerHTML = '';\n  Target.appendChild(<Component />);\n\n  updateFocusState();\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { updateMediaTypes } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function MediaTypeSwitcher({ storage }) {\n  return (\n    <>\n      <label for=\"mediaSwitcherButton\" class={`${styles.label} ${styles.overflow}`}>\n        {storage.mediaTypes.length ? storage.mediaTypes.join(', ') : 'Media type'}\n      </label>\n      <input type=\"checkbox\" class={styles.button} id=\"mediaSwitcherButton\" />\n      <div class={styles.wrapper}>\n        {['image', 'audio', 'video'].map(mediaType => (\n          <div>\n            <input\n              type={'checkbox'}\n              class={styles.mediaType}\n              name=\"mediaType\"\n              onchange={event => updateMediaTypes(window.data, event.target)}\n              id={mediaType}\n              value={mediaType}\n              checked={storage.mediaTypes.length && storage.mediaTypes.indexOf(mediaType) !== -1}\n            />\n            <label For={mediaType}>{mediaType}</label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","export { default } from './MediaTypeSwitcher';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/renderer';\nimport styles from './style.css';\n\nexport default function SearchInput({ storage }) {\n  return (\n    <input\n      type=\"text\"\n      id=\"searchInput\"\n      placeholder='Search for ... (e.g. \"M101\")'\n      class={styles.search__input}\n      onchange={event => {\n        window.data.searchValue = event.target.value;\n        renderApp();\n      }}\n      value={storage.searchValue !== null ? storage.searchValue : ``}\n    />\n  );\n}\n","export { default } from './SearchInput';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\n\nexport default function SearchButton() {\n  return (\n    <button\n      class={styles.search__button}\n      disabled={!window.data.mediaTypes.length || !window.data.searchValue}\n    >\n      search\n    </button>\n  );\n}\n","export { default } from './SearchButton';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { openHomePage } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function Logo() {\n  return (\n    <a href=\"/\" onclick={event => openHomePage(window.data, event)}>\n      <img src={require('../../../assets/logo.svg')} class={styles.logo} />\n    </a>\n  );\n}\n","export { default } from './Logo';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { searchByTerm } from '../../data/mediaData';\nimport styles from './style.css';\nimport MediaTypeSwitcher from '../MediaTypeSwitcher';\nimport SearchInput from '../SearchInput';\nimport SearchButton from '../SearchButton';\nimport Logo from '../Logo';\n\nexport default function SearchLayout({ searchPosition }) {\n  const searchPositionClass = searchPosition === 'top' ? styles.form_top : styles.form_middle,\n    searchClasses = [styles.form__wrapper, searchPositionClass].join(' ');\n  return (\n    <>\n      <div class={searchClasses}>\n        {searchPosition === 'top' ? <Logo /> : ``}\n        <form\n          onsubmit={event => searchByTerm(window.data, event)}\n          id=\"searchForm\"\n          class={styles.form}\n        >\n          <div class={styles.search__box}>\n            <MediaTypeSwitcher storage={window.data} />\n            <SearchInput storage={window.data} />\n          </div>\n          <SearchButton />\n        </form>\n      </div>\n    </>\n  );\n}\n","export { default } from './SearchLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport { isFilterSelected, selectFilter } from '../../data/mediaData.js';\n\nexport default function FilterItem({ filterName, filterCounter, categorie }) {\n  return (\n    <>\n      <label class={styles.filter__label}>\n        <input\n          value={filterName}\n          name={filterName}\n          data-categorie={categorie}\n          type={'checkbox'}\n          checked={isFilterSelected(window.data.selectedFiltersList, filterName, categorie)}\n          onchange={event => selectFilter(window.data, event.target)}\n        />\n        <span class={styles.text}>{filterName} </span>\n        <span class={styles.filter__counter}>({filterCounter})</span>\n      </label>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport { FILTERS_TEXT } from '../../data/dataSettings';\nimport FilterItem from './FilterItem';\n\nexport default function FilterBlock({ filtersContainer, filterName }) {\n  return (\n    <>\n      <h3 class={styles.filter__heading}>{FILTERS_TEXT[filterName]}</h3>\n      <div class={styles.filter__item_wrapper}>\n        {Object.keys(filtersContainer[filterName]).map(filterContent => (\n          <FilterItem\n            filterName={filterContent}\n            filterCounter={filtersContainer[filterName][filterContent]}\n            categorie={filterName}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport { hasFilteringParameters } from '../../utils.js';\nimport FilterBlock from './FilterBlock';\n\nexport default function Filters({ filtersContainer }) {\n  return Object.keys(filtersContainer).map(filterName => {\n    if (hasFilteringParameters(filtersContainer[filterName])) {\n      return <FilterBlock filtersContainer={filtersContainer} filterName={filterName} />;\n    }\n    return <></>;\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport Filters from './Filters';\n\nexport default function FiltersByCategories() {\n  return !window.data.noResults ? (\n    <form id=\"filters\" class={styles.filters__wrapper}>\n      <Filters filtersContainer={window.data.filters} />\n    </form>\n  ) : (\n    ''\n  );\n}\n","export { default } from './FiltersByCategories';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\n\nexport default function Option({ storage, option, sortType }) {\n  return (\n    <option\n      value={`${option}_${sortType}`}\n      class={styles.option}\n      selected={storage.sortingSet && storage.sortingOption === `${option}_${sortType}`}\n    >\n      {SORTING_OPTIONS_TEXT[option]}\n      {sortType === 'ascending' ? '↑' : '↓'}\n    </option>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\nimport { isOptionNeeded } from '../../data/mediaData';\nimport Option from './Option';\n\nexport default function SortOptions({ storage }) {\n  return Object.keys(SORTING_OPTIONS_TEXT).map(option => {\n    if (isOptionNeeded(storage, option)) {\n      return ['ascending', 'descending'].map(sortType => (\n        <Option storage={storage} option={option} sortType={sortType} />\n      ));\n    }\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport { sortMedia } from '../../data/mediaData';\nimport renderApp from '../../framework/renderer';\nimport styles from './style.css';\nimport SortOptions from './SortOptions';\n\nexport default function SortSelect() {\n  return (\n    <label>\n      Sort by:\n      <select\n        name=\"mediaSort\"\n        id=\"mediaSort\"\n        onchange={event => {\n          sortMedia(window.data, event);\n          renderApp();\n        }}\n      >\n        <SortOptions storage={window.data} />\n      </select>\n    </label>\n  );\n}\n//render\n","export { default } from './SortSelect';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/renderer';\nimport { removeFilter } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function SelectedFilter({ filterSelected }) {\n  return (\n    <div class={styles.filter__selected_container}>\n      <span class={styles.filter__selected}>\n        {filterSelected.categorie}: {filterSelected.value}\n      </span>\n      <button\n        class={styles.remove__filter}\n        onclick={event => {\n          removeFilter(window.data, event.target);\n          renderApp();\n        }}\n        value={filterSelected.value}\n        data-categorie={filterSelected.categorie}\n      >\n        x\n      </button>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport SelectedFilter from './SelectedFilter';\n\nexport default function SelectedFilters({ storage }) {\n  return storage.selectedFiltersList.map(filter => <SelectedFilter filterSelected={filter} />);\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport renderApp from '../../framework/renderer';\nimport { filterItems } from '../../data/mediaData';\n\nimport styles from './style.css';\n\nexport default function FilterButton() {\n  return (\n    <button\n      onclick={event => {\n        filterItems(window.data);\n        renderApp();\n      }}\n      class={styles.filter__button}\n    >\n      Apply filters\n    </button>\n  );\n}\n//render\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport SelectedFilters from './SelectedFilters';\nimport FilterButton from './FilterButton';\n\nexport default function SelectedFiltersLayout({ storage }) {\n  return (\n    <div class={styles.selected__filters}>\n      {storage.filtersSelected ? <SelectedFilters storage={storage} /> : ''}\n      {storage.selectedFiltersList.length ? <FilterButton /> : ''}\n    </div>\n  );\n}\n","export { default } from './SelectedFiltersLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\n\n//TODO: fix styling problems style = [object Object]\n\nexport default function Card({ dataItem }) {\n  const cardType =\n      dataItem.mediaType === 'audio'\n        ? styles.audio\n        : dataItem.mediaType === 'video'\n        ? styles.video\n        : styles.image,\n    cardClass = `${styles.card__item} ${cardType}`,\n    backgroundURL =\n      dataItem.previewImage !== null ? dataItem.previewImage : require('../../../assets/audio.svg');\n  return (\n    <div\n      class={cardClass}\n      id={dataItem.id}\n      style={{ backgroundImage: `url(${backgroundURL})` }}\n      data-background={dataItem.previewImage}\n      data-title={dataItem.title}\n    ></div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport Card from './Card';\n\nexport default function MediaCards({ storage }) {\n  const data = !storage.performFiltering ? storage.flattenedData : storage.filteredData;\n  return (\n    <>\n      {data.map(dataItem => (\n        <Card dataItem={dataItem} />\n      ))}\n    </>\n  );\n}\n","export { default } from './MediaCards';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\n\nexport default function NoResults() {\n  return (\n    <div class={styles.wrap}>\n      <h2 class={styles.no_results}>No results found :(</h2>\n    </div>\n  );\n}\n","export { default } from './NoResults';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport SortSelect from '../SortSelect';\nimport SelectedFiltersLayout from '../SelectedFiltersLayout';\nimport MediaCards from '../MediaCards';\nimport NoResults from '../NoResults';\n\n//TODO: fix searchValue update when input is changed (total hits for*)\nexport default function ResponseContent() {\n  return !window.data.noResults ? (\n    <div class={styles.cards__wrapper} id=\"cardsWrapper\">\n      <div class={styles.sort_hits_wrapper}>\n        <h3 class={styles.total_hits}>\n          Total hits {window.data.totalHits} for {window.data.searchValue}\n        </h3>\n        <SortSelect />\n      </div>\n      <SelectedFiltersLayout storage={window.data} />\n      <MediaCards storage={window.data} />\n    </div>\n  ) : (\n    <NoResults />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\nimport SearchLayout from '../SearchLayout';\nimport FiltersByCategories from '../FiltersByCategories';\nimport ResponseContent from './ResponseContent';\n\nexport default function ResponseLayout({ searchPosition }) {\n  return (\n    <>\n      <SearchLayout searchPosition={searchPosition} />\n      <div class={styles.response__layout}>\n        <br />\n        <FiltersByCategories />\n        <br />\n        <ResponseContent />\n      </div>\n    </>\n  );\n}\n","export { default } from './ResponseLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport styles from './style.css';\n\nexport default function Loader({ text }) {\n  return <div class={styles.loader} data-text={text}></div>;\n}\n","export { default } from './Loader';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework/element';\nimport ResponseLayout from '../ResponseLayout';\nimport Loader from '../Loader';\nimport SearchLayout from '../SearchLayout';\n\nexport default function App() {\n  return (\n    <>\n      {window.data.requestMade ? (\n        <ResponseLayout searchPosition={'top'} />\n      ) : window.data.isDataLoading ? (\n        <Loader text={''} />\n      ) : window.data.isError ? (\n        <Loader text={window.data.errorMessage} />\n      ) : (\n        <SearchLayout searchPosition={'middle'} />\n      )}\n    </>\n  );\n}\n","export { default } from './App';\n","import { dataStore } from './data/dataStore.js';\nimport styles from './style.css';\nimport renderApp from './framework/renderer';\nimport App from './components/App';\n\n//todo add pagination\nwindow.data = dataStore;\n\nrenderApp(App, document.getElementById('app-root'));\n"]}