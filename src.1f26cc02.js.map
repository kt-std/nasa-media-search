{"version":3,"sources":["data/dataStore.js","utils.js","framework/hooks.js","framework/element.js","data/dataSettings.js","data/imagesAPI.js","data/mediaData.js","framework/renderer.js","framework/index.js","components/MediaTypeSwitcher/MediaTypeSwitcher.js","components/MediaTypeSwitcher/index.js","components/SearchInput/SearchInput.js","components/SearchInput/index.js","components/SearchButton/SearchButton.js","components/SearchButton/index.js","components/Logo/Logo.js","components/Logo/index.js","components/SearchLayout/SearchLayout.js","components/SearchLayout/index.js","components/FiltersByCategories/FilterItem.js","components/FiltersByCategories/Filters.js","components/FiltersByCategories/FiltersByCategories.js","components/FiltersByCategories/index.js","components/SortSelect/Option.js","components/SortSelect/SortOptions.js","components/SortSelect/SortSelect.js","components/SortSelect/index.js","components/SelectedFiltersLayout/SelectedFilter.js","components/SelectedFiltersLayout/SelectedFilters.js","components/SelectedFiltersLayout/FilterButton.js","components/SelectedFiltersLayout/SelectedFiltersLayout.js","components/SelectedFiltersLayout/index.js","components/MediaCards/Card.js","components/MediaCards/MediaCards.js","components/MediaCards/index.js","components/NoResults/NoResults.js","components/NoResults/index.js","components/ResponseLayout/ResponseContent.js","components/ResponseLayout/ResponseLayout.js","components/ResponseLayout/index.js","components/Loader/Loader.js","components/Loader/index.js","framework/customHooks.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","requestMade","allRequestsMade","isDataLoading","noResults","isError","errorMessage","filters","filtersSelected","selectedFiltersList","performFiltering","flattenedData","filteredData","responseData","mediaTypes","totalHits","searchValue","focusOnFilter","sortingSet","sortingOption","hasFilteringParameters","filter","Object","keys","length","isElementInArray","data","element","some","dataItem","toUpperCase","isFunction","func","getNumberFromString","value","parseInt","undefined","getSeconds","date","Date","getTime","removeSpacesFromLink","link","split","join","replaceProtocolExtension","replace","flat","array","reduce","acc","current","concat","getParametersValueFromNodeList","parameter","nodeList","Array","from","map","item","removeClass","className","classList","remove","addClass","add","getItemByStringPattern","str","findIndex","includes","keywordIsASingleWord","keyword","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","dep","index","createElement","DocumentFragment","document","entries","name","startsWith","toLowerCase","substr","removeAttribute","setAttribute","properties","style","e","console","error","child","appendChild","parent","isArray","subChild","nodeType","createTextNode","toString","createFragment","FILTERS_BY_MEDIA_TYPE","video","audio","image","FILTERS_TEXT","keywords","location","center","creator","bitrate","colorSpace","resolutionOrigin","album","MEDIA_TYPE_SORTING_OPTIONS","SORTING_OPTIONS_TEXT","duration","sizeValue","framerate","bitrateValue","resolutionValue","MEDATADA_KEYS_BY_MEDIA_TYPE","size","resolution","requestMedia","searchInputValue","getElementById","requestURL","createRequestURL","getDataPages","dataReceived","getAndPrepareMetadataForRendering","requestCollectionAndMetadata","collectionData","getCollectionData","getMetadata","pagesCounter","errorText","fetch","then","response","ok","json","Error","responseBody","collection","links","nextPageLinkIndex","hasPage","hasNextPage","href","items","catch","errMsg","metadataFromLinks","requests","getAllPromisesData","getMetadataPromisesFromCollectionList","collectionDataItem","i","metadataLink","downloadLink","metadata","download","Promise","all","responseDataItem","err","linksList","linkItem","rel","searchByTerm","mediaRequest","sort","preventDefault","resetState","setIsDataLoading","openHomePage","media","searchParams","setRequestMade","setSearchValue","setMediaTypes","styles","no_image__background","body","updateData","dataParams","setTotalHits","setNoResults","setFlattenedData","setFilters","updateMediaTypes","mediaTypesValue","setMediaTypesCB","input","inputIndex","indexOf","splice","sortMedia","mediaData","setCB","setFilteredData","option","direction","target","setSortingOption","setIsSortingSet","sortByDirection","filterItems","filterData","categorie","selectFilter","filterValue","getAttribute","setFiltersSelected","isFilterSelected","removeFilter","setSelectedFiltersList","filterName","deleteIndex","setPerformFiltering","setAllRequestsMade","setIsError","setError","errMessage","setErrorMessage","changeBackground","updateFocusState","querySelector","focus","isOptionNeeded","mediaType","a","b","isA","isB","getResponseData","getConciseContentFromRespond","previewImage","date_created","media_type","title","description","secondary_creator","nasa_id","getOnlySingleWordKeyword","id","getCreatorsList","getFiltersAndUpdate","getFiltersFromMetadata","getFiltersFromLists","mediaMetadata","getFiltersDataFromMetadata","mediaKeysNeeded","key","transformKeyValueToNumber","filtersContainer","updateFilterValue","getMediaTypes","querySelectorAll","setSelectedMediaTypes","metadataValue","getImageAlbum","getDurationValueFromString","getSizeInKBFromString","getResolutionFromString","height","width","splitStringWithDifferentSeparator","time","match","getSecondsFromDurationValue","separatedTimeValues","parseDuration","hours","minutes","seconds","number","unit","stringToSplit","showDescription","contains","toggle","render","timer","Component","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","MediaTypeSwitcher","label","overflow","button","wrapper","event","SearchInput","search__input","SearchButton","search__button","Logo","require","logo","SearchLayout","searchPosition","searchPositionClass","form_top","form_middle","searchClasses","form__wrapper","form","search__box","FilterItem","filterCounter","filter__label","text","filter__counter","Filters","filter__heading","filter__item_wrapper","filterContent","FiltersByCategories","filters__wrapper","Option","isSortingSet","sortType","selected","SortOptions","SortSelect","SelectedFilter","filterItem","filter__selected_container","filter__selected","remove__filter","SelectedFilters","FilterButton","filter__button","SelectedFiltersLayout","selected__filters","Card","cardType","cardClass","card__item","backgroundURL","item_container","backgroundImage","visible","heading","description_text","MediaCards","cards_wrapper","NoResults","wrap","no_results","ResponseContent","cards__wrapper","sort_hits_wrapper","total_hits","ResponseLayout","response__layout","Loader","loader_text","loader","error_text","useMedia","useSearchParams","useData","useError","useSort","useFilter","useMediaRequest","performRequest","setResponseData","App"],"mappings":"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","file":"src.1f26cc02.js","sourceRoot":"../src","sourcesContent":["export const dataStore = {\n  requestMade: false,\n  allRequestsMade: false,\n  isDataLoading: false,\n\n  noResults: false,\n\n  isError: false,\n  errorMessage: '',\n\n  filters: {},\n  filtersSelected: false,\n  selectedFiltersList: [],\n  performFiltering: false,\n\n  flattenedData: [],\n  filteredData: [],\n  responseData: [],\n\n  mediaTypes: [],\n  totalHits: null,\n  searchValue: null,\n\n  focusOnFilter: null,\n\n  sortingSet: false,\n  sortingOption: null,\n};\n","export function hasFilteringParameters(filter) {\n  return Object.keys(filter).length;\n}\n\nexport function isElementInArray(data, element) {\n  return data.some(dataItem => dataItem.toUpperCase() === element);\n}\n\nexport const isFunction = func => typeof func === 'function';\n\nexport function getNumberFromString(value) {\n  return value ? parseInt(value) : undefined;\n}\n\nexport function getSeconds(date) {\n  return new Date(date).getTime();\n}\n\nexport function removeSpacesFromLink(link) {\n  return link !== null ? link.split(' ').join('%20') : null;\n}\n\nexport function replaceProtocolExtension(link) {\n  return link.replace(/(http)/gm, 'https');\n}\n\nexport function flat(array) {\n  return array.reduce((acc, current) => acc.concat(current), []);\n}\n\nexport function getParametersValueFromNodeList(parameter, nodeList) {\n  return Array.from(nodeList).map(item => item[parameter]);\n}\n\nexport function removeClass(className, element) {\n  element.classList.remove(className);\n}\n\nexport function addClass(className, element) {\n  element.classList.add(className);\n}\n\nexport function getItemByStringPattern(str, data) {\n  return data[data.findIndex(dataItem => dataItem.includes(str))];\n}\n\nexport function keywordIsASingleWord(keyword) {\n  return keyword.split(' ').length === 1 && !parseInt(keyword);\n}\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n","import { createFunctionElement } from './hooks';\nimport { isFunction } from '../utils';\n/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nexport const createElement = (tag, props, ...children) => {\n  if (isFunction(tag)) {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked', 'selected'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n          // If style property is given then add styles to object\n          if (name === 'style') {\n            if (typeof value === 'object') {\n              Object.keys(value).forEach(properties => {\n                element.style[properties] = value[properties];\n              });\n            }\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","export const FILTERS_BY_MEDIA_TYPE = {\n  video: ['keywords', 'location', 'creator'],\n  audio: ['keywords', 'center', 'bitrate'],\n  image: ['keywords', 'creator', 'center', 'colorSpace', 'resolutionOrigin', 'album'],\n};\n\nexport const FILTERS_TEXT = {\n  keywords: 'key terms',\n  location: 'location',\n  center: 'center',\n  creator: 'media creator',\n  bitrate: 'audio bitrate',\n  colorSpace: 'image color space',\n  resolutionOrigin: 'image resolution',\n  album: 'image album',\n};\n\nexport const MEDIA_TYPE_SORTING_OPTIONS = {\n  video: ['duration', 'date', 'sizeValue', 'framerate'],\n  audio: ['duration', 'date', 'sizeValue', 'bitrateValue'],\n  image: ['date', 'sizeValue', 'resolutionValue'],\n};\n\nexport const SORTING_OPTIONS_TEXT = {\n  duration: 'duration',\n  date: 'creation date',\n  sizeValue: 'file size',\n  framerate: 'frame rate',\n  bitrateValue: 'bitrate',\n  resolutionValue: 'resolution',\n};\n\nexport const MEDATADA_KEYS_BY_MEDIA_TYPE = {\n  video: {\n    location: 'AVAIL:Location',\n    framerate: 'QuickTime:VideoFrameRate',\n    duration: 'QuickTime:Duration',\n    size: 'File:FileSize',\n  },\n  image: {\n    colorSpace: 'EXIF:ColorSpace',\n    size: 'File:FileSize',\n    resolution: 'Composite:ImageSize',\n    album: 'AVAIL:Album',\n  },\n  audio: {\n    bitrate: 'MPEG:AudioBitrate',\n    duration: 'Composite:Duration',\n    size: 'File:FileSize',\n  },\n};\n","import {\n  getMediaTypes,\n  setSelectedMediaTypes,\n  getFiltersAndUpdate,\n  getResponseData,\n  changeBackground,\n  setError,\n} from './mediaData';\nimport renderApp from '../framework/renderer';\nimport { replaceProtocolExtension, getItemByStringPattern } from '../utils';\n\nexport async function requestMedia() {\n  const data = {};\n  const searchInputValue = document.getElementById('searchInput').value,\n    mediaTypes = getMediaTypes();\n  let requestURL = createRequestURL(searchInputValue, mediaTypes);\n\n  const { responseData, error } = await getDataPages(requestURL);\n  if (!error.isError) {\n    const dataReceived = await getAndPrepareMetadataForRendering(responseData);\n    return { ...dataReceived, mediaTypes };\n  }\n  return { ...error, mediaTypes };\n}\n\nexport async function requestCollectionAndMetadata(responseData) {\n  let noResults = false;\n  const flattenedData = getResponseData(responseData);\n  if (!flattenedData.length) noResults = true;\n  const collectionData = await getCollectionData(flattenedData);\n  if (!collectionData.isError) {\n    const metadataFromLinks = await getMetadata(flattenedData, collectionData);\n    return { data: metadataFromLinks, flattenedData, noResults };\n  }\n  return { data: collectionData, flattenedData, noResults };\n}\n\nasync function getDataPages(requestURL) {\n  let pagesCounter = 0,\n    allRequestsMade = false,\n    responseData = [],\n    error = { isError: false, errorText: '' };\n  while (!allRequestsMade) {\n    await fetch(requestURL)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        } else {\n          allRequestsMade = true;\n          throw Error(response);\n        }\n      })\n      .then(responseBody => {\n        if (responseBody.collection.links) {\n          const { nextPageLinkIndex, hasPage } = hasNextPage(responseBody.collection.links);\n          if (pagesCounter === 1 || !hasPage) {\n            allRequestsMade = true;\n          } else {\n            requestURL = replaceProtocolExtension(\n              responseBody.collection.links[nextPageLinkIndex].href,\n            );\n            pagesCounter++;\n          }\n        } else {\n          allRequestsMade = true;\n        }\n        responseData = responseData.concat(responseBody.collection.items);\n      })\n      .catch(errMsg => {\n        allRequestsMade = true;\n        error = { isError: true, errorText: errMsg };\n      });\n  }\n  return { responseData, error };\n}\n\nexport async function getAndPrepareMetadataForRendering(responseData) {\n  const { data: metadataFromLinks, flattenedData, noResults } = await requestCollectionAndMetadata(\n    responseData,\n  );\n  changeBackground();\n  if (!noResults && !metadataFromLinks.isError) {\n    const { filters, totalHits } = await getFiltersAndUpdate(flattenedData, metadataFromLinks);\n    return { filters, noResults, totalHits, flattenedData, isError: false };\n  }\n  return { filters: {}, noResults, totalHits: null, flattenedData: [], ...metadataFromLinks };\n}\n\nasync function getCollectionData(flattenedData) {\n  const requests = await flattenedData.map(dataItem => fetch(dataItem.href));\n  const data = await getAllPromisesData(requests);\n  return data;\n}\n\nfunction getMetadataPromisesFromCollectionList(flattenedData, collectionData) {\n  return collectionData.map((collectionDataItem, i) => {\n    const metadataLink = getItemByStringPattern('metadata.json', collectionDataItem),\n      downloadLink = getItemByStringPattern('~orig', collectionDataItem);\n    flattenedData[i].metadata = replaceProtocolExtension(metadataLink);\n    flattenedData[i].download = replaceProtocolExtension(downloadLink);\n    return fetch(flattenedData[i].metadata);\n  });\n}\n\nfunction getMetadata(flattenedData, collectionData) {\n  const metadataFetchedLinks = getMetadataPromisesFromCollectionList(flattenedData, collectionData);\n  return getAllPromisesData(metadataFetchedLinks);\n}\n\nfunction getAllPromisesData(data) {\n  const error = { isError: true, errorText: 'Try to reload the page' };\n  return Promise.all(data)\n    .then(responseData =>\n      Promise.all(\n        responseData.map(responseDataItem => {\n          if (responseDataItem.ok) {\n            return responseDataItem.json();\n          } else {\n            throw Error(responseData);\n          }\n        }),\n      ).catch(err => error),\n    )\n    .catch(err => error);\n}\n\nfunction hasNextPage(linksList) {\n  const nextPageLinkIndex = linksList.findIndex((linkItem, i) => linkItem.rel === 'next');\n  return nextPageLinkIndex !== -1\n    ? { hasPage: true, nextPageLinkIndex }\n    : { hasPage: false, nextPageLinkIndex };\n}\n\nfunction createRequestURL(searchInputValue, mediaTypes) {\n  const API_URL = 'https://images-api.nasa.gov/search';\n  return `${API_URL}?q=${searchInputValue}${\n    mediaTypes.length ? `&media_type=${mediaTypes.join(',')}` : ''\n  }`;\n}\n","import {\n  MEDIA_TYPE_SORTING_OPTIONS,\n  MEDATADA_KEYS_BY_MEDIA_TYPE,\n  SORTING_OPTIONS_TEXT,\n  FILTERS_TEXT,\n  FILTERS_BY_MEDIA_TYPE,\n  RESPONSE_DATA_FILES,\n} from './dataSettings';\nimport {\n  hasFilteringParameters,\n  getNumberFromString,\n  getSeconds,\n  getParametersValueFromNodeList,\n  removeClass,\n  addClass,\n  removeSpacesFromLink,\n  isElementInArray,\n  keywordIsASingleWord,\n} from '../utils';\nimport { requestMedia } from './imagesAPI';\nimport styles from '/style.css';\nimport renderApp from '../framework/renderer';\n\nexport function searchByTerm(error, data, mediaRequest, filter, sort, e) {\n  e.preventDefault();\n  resetState(data, mediaRequest, sort, filter, error);\n  mediaRequest.setIsDataLoading(true);\n}\n\nexport function openHomePage(media, e) {\n  const { data, mediaRequest, searchParams, sort, filter, error } = media;\n  e.preventDefault();\n  mediaRequest.setRequestMade(false);\n  searchParams.setSearchValue(null);\n  searchParams.setMediaTypes([]);\n  resetState(data, mediaRequest, sort, filter, error);\n  removeClass(`${styles.no_image__background}`, document.body);\n}\n\nexport function updateData(dataParams, data, filter, searchParams) {\n  const { filters, totalHits, flattenedData, mediaTypes, noResults } = dataParams;\n  data.setTotalHits(totalHits);\n  data.setNoResults(noResults);\n  data.setFlattenedData(flattenedData);\n  filter.setFilters(filters);\n  searchParams.setMediaTypes(mediaTypes);\n}\n\nexport function updateMediaTypes(mediaTypesValue, setMediaTypesCB, input) {\n  const inputIndex = mediaTypesValue.indexOf(input.value);\n  if (inputIndex === -1) {\n    mediaTypesValue.push(input.value);\n  } else {\n    mediaTypesValue.splice(inputIndex, 1);\n  }\n  setMediaTypesCB(mediaTypesValue);\n}\n\nexport function sortMedia(data, sort, e) {\n  const { mediaData, setCB } = data.filtersSelected\n      ? { mediaData: data.filteredData, setCB: data.setFilteredData }\n      : { mediaData: data.flattenedData, setCB: data.setFlattenedData },\n    [option, direction] = e.target.value.split('_');\n  sort.setSortingOption(e.target.value);\n  sort.setIsSortingSet(true);\n  sortByDirection(mediaData, option, direction);\n  setCB(mediaData);\n}\n\nexport function filterItems(data, filterData) {\n  const filteredData = [];\n  filterData.selectedFiltersList.forEach(filter => {\n    const { categorie } = filter;\n    data.flattenedData.forEach(dataItem => {\n      if (filteredData.indexOf(dataItem) === -1 && dataItem[categorie]) {\n        if (Array.isArray(dataItem[categorie])) {\n          if (isElementInArray(dataItem[categorie], filter.value)) {\n            filteredData.push(dataItem);\n          }\n        } else {\n          if (dataItem[categorie].toUpperCase() === filter.value) {\n            filteredData.push(dataItem);\n          }\n        }\n      }\n    });\n  });\n  data.setFilteredData(filteredData);\n  data.setTotalHits(filteredData.length);\n}\n\nexport function selectFilter(data, filterData, e) {\n  const filterValue = e.target.value,\n    categorie = e.target.getAttribute('data-categorie');\n  filterData.setFiltersSelected(true);\n  if (!isFilterSelected(filterData.selectedFiltersList, filterValue, categorie)) {\n    filterData.selectedFiltersList.push({ value: filterValue, categorie });\n  } else {\n    removeFilter(data, filterData, e);\n  }\n  filterData.setSelectedFiltersList(filterData.selectedFiltersList);\n}\n\nexport function removeFilter(data, filter, e) {\n  const filterName = e.target.value,\n    categorie = e.target.getAttribute('data-categorie'),\n    deleteIndex = filter.selectedFiltersList.findIndex(\n      element => element.value === filterName && categorie === element.categorie,\n    );\n  filter.selectedFiltersList.splice(deleteIndex, 1);\n  if (!filter.selectedFiltersList.length) {\n    filter.setPerformFiltering(false);\n    filter.setFiltersSelected(false);\n    data.setFilteredData([]);\n    data.setTotalHits(data.flattenedData.length);\n  }\n  filter.setSelectedFiltersList(filter.selectedFiltersList);\n}\n\nexport function resetState(data, mediaRequest, sort, filter, error) {\n  data.setTotalHits(null);\n  data.setNoResults(false);\n  data.setFilteredData([]);\n  data.setFlattenedData([]);\n  mediaRequest.setAllRequestsMade(false);\n  mediaRequest.setRequestMade(false);\n  sort.setIsSortingSet(false);\n  error.setIsError(false);\n  filter.setSelectedFiltersList([]);\n  filter.setPerformFiltering(false);\n  filter.setFiltersSelected(false);\n  filter.setFilters({});\n}\n\nexport function setError(errMessage, mediaRequest, error) {\n  mediaRequest.setIsDataLoading(false);\n  mediaRequest.setAllRequestsMade(true);\n  error.setIsError(true);\n  error.setErrorMessage(`Ooops!..${errMessage}.<br/>Try to reload the page`);\n}\n\nexport function changeBackground() {\n  addClass(`${styles.no_image__background}`, document.body);\n}\n\nexport function updateFocusState(focusOnFilter) {\n  if (focusOnFilter !== null) document.querySelector(`[name=\"${focusOnFilter}\"]`).focus();\n}\n\nexport function isFilterSelected(filtersSelected, filterName, categorie) {\n  return filtersSelected.some(\n    filter => filter.categorie === categorie && filter.value === filterName,\n  );\n}\n\nexport function isOptionNeeded(mediaTypes, option) {\n  return mediaTypes.some(mediaType => {\n    return MEDIA_TYPE_SORTING_OPTIONS[mediaType].indexOf(option) !== -1;\n  });\n}\n\nexport function sortByDirection(data, option, direction) {\n  data.sort((a, b) => {\n    const isA = typeof a[option] !== 'undefined',\n      isB = typeof b[option] !== 'undefined';\n    if (direction === 'ascending') {\n      return isB - isA || (isA === true && a[option] - b[option]) || 0;\n    } else {\n      return isB - isA || (isA === true && b[option] - a[option]) || 0;\n    }\n  });\n}\n\nexport function getResponseData(responseData) {\n  return getConciseContentFromRespond(responseData);\n}\n\nfunction getConciseContentFromRespond(items) {\n  return items.map(item => {\n    const { data, href, links: [{ href: previewImage }] = [{ href: null }] } = item;\n    const {\n      keywords,\n      date_created,\n      center,\n      media_type,\n      title,\n      description,\n      secondary_creator = null,\n      nasa_id,\n    } = data[0];\n    return {\n      keywords: getOnlySingleWordKeyword(keywords),\n      date: getSeconds(date_created),\n      id: nasa_id,\n      title,\n      center,\n      previewImage: removeSpacesFromLink(previewImage),\n      href,\n      description,\n      mediaType: media_type,\n      creator: getCreatorsList(secondary_creator),\n    };\n  });\n}\n\nexport function getFiltersAndUpdate(flattenedData, metadata) {\n  getFiltersFromMetadata(metadata, flattenedData);\n  const { filters } = getFiltersFromLists(flattenedData),\n    totalHits = flattenedData.length;\n  return { filters, totalHits };\n}\n\nfunction getFiltersFromMetadata(metadata, flattenedData) {\n  metadata.forEach((mediaMetadata, i) => {\n    getFiltersDataFromMetadata(mediaMetadata, flattenedData[i]);\n  });\n}\n\nfunction getFiltersDataFromMetadata(mediaMetadata, dataItem) {\n  const mediaKeysNeeded = MEDATADA_KEYS_BY_MEDIA_TYPE[dataItem.mediaType];\n  Object.keys(mediaKeysNeeded).forEach(key => {\n    transformKeyValueToNumber(key, dataItem, mediaMetadata[mediaKeysNeeded[key]]);\n  });\n}\n\nfunction getFiltersFromLists(flattenedData) {\n  const filtersContainer = {};\n  flattenedData.forEach(dataItem => {\n    FILTERS_BY_MEDIA_TYPE[dataItem.mediaType].forEach(key => {\n      if (!filtersContainer[key]) {\n        filtersContainer[key] = {};\n      }\n      if (dataItem[key]) {\n        if (Array.isArray(dataItem[key])) {\n          dataItem[key].forEach(keyword => {\n            updateFilterValue(filtersContainer[key], keyword);\n          });\n        } else {\n          updateFilterValue(filtersContainer[key], dataItem[key]);\n        }\n      }\n    });\n  });\n  return { filters: filtersContainer };\n}\n\nfunction updateFilterValue(filtersContainer, keyword) {\n  if (keyword !== undefined) {\n    if (!filtersContainer[keyword.toUpperCase()]) {\n      filtersContainer[keyword.toUpperCase()] = 1;\n    } else {\n      filtersContainer[keyword.toUpperCase()]++;\n    }\n  }\n}\n\nexport function getMediaTypes() {\n  const mediaTypes = document.querySelectorAll('input[name=\"mediaType\"]:checked');\n  return getParametersValueFromNodeList('value', mediaTypes);\n}\n\nexport function setSelectedMediaTypes(mediaTypes) {\n  return mediaTypes.length ? mediaTypes : null;\n}\n\nfunction getOnlySingleWordKeyword(keywords) {\n  return keywords ? keywords.filter(keyword => keywordIsASingleWord(keyword)) : 'unknown';\n}\n\nfunction transformKeyValueToNumber(key, dataItem, metadataValue) {\n  if (metadataValue) {\n    switch (key) {\n      case 'album':\n        dataItem[key] = getImageAlbum(metadataValue);\n        break;\n      case 'duration':\n        dataItem[key] = getDurationValueFromString(metadataValue);\n        break;\n      case 'size':\n        dataItem[key] = getSizeInKBFromString(metadataValue);\n        dataItem[`${key}Value`] = dataItem[key].value;\n        break;\n      case 'bitrate':\n        dataItem[`${key}Value`] = getNumberFromString(metadataValue);\n        dataItem[key] = metadataValue;\n        break;\n      case 'resolution':\n        dataItem[key] = getResolutionFromString(metadataValue);\n        dataItem[`${key}Origin`] = metadataValue;\n        dataItem[`${key}Value`] = dataItem[key].height * dataItem[key].width;\n        break;\n      default:\n        dataItem[key] = metadataValue;\n    }\n  } else {\n    dataItem[key] = metadataValue;\n  }\n}\n\nfunction getCreatorsList(creator) {\n  return creator !== null ? splitStringWithDifferentSeparator(creator) : ['unknown'];\n}\n\nfunction getDurationValueFromString(duration) {\n  if (duration && duration !== null) {\n    const time = duration.match(/\\d{1,}:\\d{2}:\\d{2}/g);\n    return time !== null ? getSecondsFromDurationValue(time[0]) : undefined;\n  }\n  return undefined;\n}\n\nfunction getSecondsFromDurationValue(time) {\n  const separatedTimeValues = parseDuration(time),\n    [hours, minutes, seconds] = separatedTimeValues;\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\nfunction parseDuration(time) {\n  return time.split(':').map(item => parseInt(item));\n}\n\nfunction getImageAlbum(value) {\n  return !value ? 'unknown' : value;\n}\n\nfunction getSizeInKBFromString(value) {\n  const [number, unit] = value.split(' ');\n  switch (unit.toUpperCase()) {\n    case 'KB':\n      return { number, unit, value: getNumberFromString(number) };\n    case 'MB':\n      return { number, unit, value: getNumberFromString(number) * 1024 };\n    case 'GB':\n      return { number, unit, value: getNumberFromString(number) * 1024 * 1024 };\n  }\n}\n\nfunction getResolutionFromString(value) {\n  const [height, width] = value.toLowerCase().split('x');\n  return { height: getNumberFromString(height), width: getNumberFromString(width), value };\n}\n\nfunction splitStringWithDifferentSeparator(stringToSplit) {\n  stringToSplit = stringToSplit.replace(/[<>]||(\\/>)/gm, '');\n  if (stringToSplit.indexOf('/') === -1) {\n    return stringToSplit.split(', ');\n  } else {\n    return stringToSplit.split('/');\n  }\n}\n\nexport function showDescription(style, e) {\n  Array.from(document.querySelectorAll(`.${style}`)).forEach(item =>\n    item.classList.contains(`${style}`) &&\n    item.id !== `description_${e.target.getAttribute('data-index')}`\n      ? item.classList.remove(`${style}`)\n      : '',\n  );\n  document\n    .getElementById(`description_${e.target.getAttribute('data-index')}`)\n    .classList.toggle(`${style}`);\n}\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\n\nimport { createElement } from './element';\nimport { updateFocusState } from '../data/mediaData';\nimport { current } from './hooks';\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n  //updateFocusState();\n}\n\nexport default render;\n","import { createElement, createFragment } from './element';\nimport { render } from './renderer';\nimport { useState, useEffect } from './hooks';\n\nexport { createElement, createFragment } from './element';\nexport { render } from './renderer';\nexport { useState, useEffect } from './hooks';\n\nexport default {\n  createElement,\n  createFragment,\n  useState,\n  useEffect,\n  render,\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { updateMediaTypes } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function MediaTypeSwitcher({ mediaTypes, setMediaTypes }) {\n  return (\n    <>\n      <label for=\"mediaSwitcherButton\" class={`${styles.label} ${styles.overflow}`}>\n        {mediaTypes.length ? mediaTypes.join(', ') : 'Media type'}\n      </label>\n      <input type=\"checkbox\" class={styles.button} id=\"mediaSwitcherButton\" />\n      <div class={styles.wrapper}>\n        {['image', 'audio', 'video'].map(mediaType => (\n          <div>\n            <input\n              type=\"checkbox\"\n              class={styles.mediaType}\n              name=\"mediaType\"\n              onchange={event => updateMediaTypes(mediaTypes, setMediaTypes, event.target)}\n              id={mediaType}\n              value={mediaType}\n              checked={mediaTypes.length && mediaTypes.indexOf(mediaType) !== -1}\n            />\n            <label For={mediaType}>{mediaType}</label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\n","export { default } from './MediaTypeSwitcher';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport render from '../../framework';\nimport styles from './style.css';\n\nexport default function SearchInput({ searchValue, setSearchValue }) {\n  return (\n    <input\n      type=\"text\"\n      id=\"searchInput\"\n      required\n      placeholder='Search for ... (e.g. \"M101\")'\n      class={styles.search__input}\n      onchange={event => {\n        setSearchValue(event.target.value);\n      }}\n      value={searchValue !== null ? searchValue : ``}\n    />\n  );\n}\n","export { default } from './SearchInput';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\n\nexport default function SearchButton({ mediaTypes }) {\n  return (\n    <button class={styles.search__button} disabled={!mediaTypes.length}>\n      search\n    </button>\n  );\n}\n","export { default } from './SearchButton';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { openHomePage } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function Logo({ media }) {\n  return (\n    <a href=\"/\" onclick={event => openHomePage(media, event)}>\n      <img src={require('../../../assets/logo.svg')} class={styles.logo} />\n    </a>\n  );\n}\n","export { default } from './Logo';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { searchByTerm } from '../../data/mediaData';\nimport styles from './style.css';\nimport MediaTypeSwitcher from '../MediaTypeSwitcher';\nimport SearchInput from '../SearchInput';\nimport SearchButton from '../SearchButton';\nimport Logo from '../Logo';\n\nexport default function SearchLayout({\n  searchPosition,\n  searchParams,\n  data,\n  mediaRequest,\n  filter,\n  sort,\n  error,\n  media,\n}) {\n  const searchPositionClass = searchPosition === 'top' ? styles.form_top : styles.form_middle,\n    searchClasses = [styles.form__wrapper, searchPositionClass].join(' ');\n  return (\n    <>\n      <div class={searchClasses}>\n        {searchPosition === 'top' ? <Logo media={media} /> : ``}\n        <form\n          onsubmit={event => searchByTerm(error, data, mediaRequest, filter, sort, event)}\n          id=\"searchForm\"\n          class={styles.form}\n        >\n          <div class={styles.search__box}>\n            <MediaTypeSwitcher\n              mediaTypes={searchParams.mediaTypes}\n              setMediaTypes={searchParams.setMediaTypes}\n            />\n            <SearchInput\n              searchValue={searchParams.searchValue}\n              setSearchValue={searchParams.setSearchValue}\n            />\n          </div>\n          <SearchButton mediaTypes={searchParams.mediaTypes} />\n        </form>\n      </div>\n    </>\n  );\n}\n","export { default } from './SearchLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { isFilterSelected, selectFilter } from '../../data/mediaData.js';\nimport styles from './style.css';\n\nexport default function FilterItem({ data, filter, filterName, filterCounter, categorie }) {\n  return (\n    <>\n      <label class={styles.filter__label}>\n        <input\n          value={filterName}\n          name={filterName}\n          data-categorie={categorie}\n          type={'checkbox'}\n          checked={isFilterSelected(filter.selectedFiltersList, filterName, categorie)}\n          onchange={e => selectFilter(data, filter, e)}\n        />\n        <span class={styles.text}>{filterName} </span>\n        <span class={styles.filter__counter}>({filterCounter})</span>\n      </label>\n    </>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport { hasFilteringParameters } from '../../utils.js';\nimport { FILTERS_TEXT } from '../../data/dataSettings';\nimport FilterItem from './FilterItem';\n\nexport default function Filters({ filter, data }) {\n  const { filters } = filter;\n  return Object.keys(filters).map(filterName => {\n    if (hasFilteringParameters(filters[filterName])) {\n      return (\n        <>\n          <h3 class={styles.filter__heading}>{FILTERS_TEXT[filterName]}</h3>\n          <div class={styles.filter__item_wrapper}>\n            {Object.keys(filters[filterName]).map(filterContent => (\n              <FilterItem\n                filterName={filterContent}\n                filterCounter={filters[filterName][filterContent]}\n                categorie={filterName}\n                filter={filter}\n                data={data}\n              />\n            ))}\n          </div>\n        </>\n      );\n    }\n    return <></>;\n  });\n}\n// <FilterBlock filtersContent={filtersContent} filterName={filterName} />;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport Filters from './Filters';\n\nexport default function FiltersByCategories({ data, filter }) {\n  return !data.noResults ? (\n    <form id=\"filters\" class={styles.filters__wrapper}>\n      <Filters data={data} filter={filter} />\n    </form>\n  ) : (\n    ''\n  );\n}\n","export { default } from './FiltersByCategories';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\n\nexport default function Option({ isSortingSet, sortingOption, option, sortType }) {\n  const selected = isSortingSet && sortingOption === `${option}_${sortType}` ? true : false;\n  return (\n    <option value={`${option}_${sortType}`} class={styles.option} selected={selected}>\n      {SORTING_OPTIONS_TEXT[option]}\n      {sortType === 'ascending' ? '↑' : '↓'}\n    </option>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\nimport { isOptionNeeded } from '../../data/mediaData';\nimport Option from './Option';\n\nexport default function SortOptions({ isSortingSet, sortingOption, mediaTypes }) {\n  return Object.keys(SORTING_OPTIONS_TEXT).map(option => {\n    if (isOptionNeeded(mediaTypes, option)) {\n      return ['ascending', 'descending'].map(sortType => (\n        <Option\n          option={option}\n          sortType={sortType}\n          isSortingSet={isSortingSet}\n          sortingOption={sortingOption}\n        />\n      ));\n    }\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { sortMedia } from '../../data/mediaData';\nimport render from '../../framework';\nimport styles from './style.css';\nimport SortOptions from './SortOptions';\n\nexport default function SortSelect({ data, sort, mediaTypes }) {\n  return (\n    <label>\n      Sort by:\n      <select\n        name=\"mediaSort\"\n        id=\"mediaSort\"\n        onchange={e => {\n          sortMedia(data, sort, e);\n        }}\n      >\n        <SortOptions\n          isSortingSet={sort.isSortingSet}\n          sortingOption={sort.sortingOption}\n          mediaTypes={mediaTypes}\n        />\n      </select>\n    </label>\n  );\n}\n//render\n","export { default } from './SortSelect';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport { removeFilter } from '../../data/mediaData';\nimport styles from './style.css';\n\nexport default function SelectedFilter({ data, filter, filterItem }) {\n  return (\n    <div class={styles.filter__selected_container}>\n      <span class={styles.filter__selected}>\n        {filterItem.categorie}: {filterItem.value}\n      </span>\n      <button\n        class={styles.remove__filter}\n        onclick={event => {\n          removeFilter(data, filter, event);\n        }}\n        value={filterItem.value}\n        data-categorie={filterItem.categorie}\n      >\n        x\n      </button>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport SelectedFilter from './SelectedFilter';\n\nexport default function SelectedFilters({ filter, data }) {\n  return filter.selectedFiltersList.map(filterItem => (\n    <SelectedFilter filter={filter} data={data} filterItem={filterItem} />\n  ));\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport render from '../../framework';\nimport { filterItems } from '../../data/mediaData';\n\nimport styles from './style.css';\n\nexport default function FilterButton({ data, filter }) {\n  return (\n    <button onclick={() => filterItems(data, filter)} class={styles.filter__button}>\n      Apply filters\n    </button>\n  );\n}\n//render\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport SelectedFilters from './SelectedFilters';\nimport FilterButton from './FilterButton';\n\nexport default function SelectedFiltersLayout({ filter, data }) {\n  return (\n    <div class={styles.selected__filters}>\n      {filter.filtersSelected ? <SelectedFilters filter={filter} data={data} /> : ''}\n      {filter.selectedFiltersList.length ? <FilterButton data={data} filter={filter} /> : ''}\n    </div>\n  );\n}\n","export { default } from './SelectedFiltersLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport { showDescription } from '../../data/mediaData';\n\n//TODO: fix styling problems style = [object Object]\n\nexport default function Card({ dataItem, index }) {\n  const cardType =\n      dataItem.mediaType === 'audio'\n        ? styles.audio\n        : dataItem.mediaType === 'video'\n        ? styles.video\n        : styles.image,\n    cardClass = `${styles.card__item} ${cardType}`,\n    backgroundURL =\n      dataItem.previewImage !== null ? dataItem.previewImage : require('../../../assets/audio.svg');\n  return (\n    <div class={styles.item_container}>\n      <div\n        class={cardClass}\n        id={dataItem.id}\n        style={{ backgroundImage: `url(${backgroundURL})` }}\n        data-background={dataItem.previewImage}\n        data-title={dataItem.title}\n        data-index={index}\n        tabindex=\"0\"\n        onclick={e => showDescription(styles.visible, e)}\n        onkeypress={e => {\n          if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            showDescription(styles.visible, e);\n          }\n        }}\n      ></div>\n      <div class={styles.description} id={`description_${index}`}>\n        <h4 class={styles.heading}>{dataItem.title}</h4>\n        <h5 class={styles.id}>\n          {dataItem.id}\n          {dataItem.sizeValue ? (\n            <span class={styles.size}>\n              ({dataItem.size.number} {dataItem.size.unit})\n            </span>\n          ) : (\n            ''\n          )}\n        </h5>\n        <a href={dataItem.download} class={styles.download} target=\"_blank\">\n          Download ⇩\n        </a>\n        <p class={styles.description_text}>{dataItem.description}</p>\n      </div>\n    </div>\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport Card from './Card';\n\nexport default function MediaCards({ filter, data }) {\n  const mediaData = !data.filteredData.length ? data.flattenedData : data.filteredData;\n  return (\n    <div class={styles.cards_wrapper}>\n      {mediaData.map((dataItem, i) => (\n        <Card dataItem={dataItem} index={i} />\n      ))}\n    </div>\n  );\n}\n","export { default } from './MediaCards';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\n\nexport default function NoResults() {\n  return (\n    <div class={styles.wrap}>\n      <h2 class={styles.no_results}>No results found :(</h2>\n    </div>\n  );\n}\n","export { default } from './NoResults';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport SortSelect from '../SortSelect';\nimport SelectedFiltersLayout from '../SelectedFiltersLayout';\nimport MediaCards from '../MediaCards';\nimport NoResults from '../NoResults';\n\n//TODO: fix searchValue update when input is changed (total hits for*)\nexport default function ResponseContent({ media }) {\n  return !media.data.noResults ? (\n    <div class={styles.cards__wrapper} id=\"cardsWrapper\">\n      <div class={styles.sort_hits_wrapper}>\n        <h3 class={styles.total_hits}>\n          Total hits {media.data.totalHits} for {media.searchParams.searchValue}\n        </h3>\n\n        <SortSelect\n          data={media.data}\n          sort={media.sort}\n          mediaTypes={media.searchParams.mediaTypes}\n        />\n      </div>\n      <SelectedFiltersLayout data={media.data} filter={media.filter} />\n      <MediaCards data={media.data} filter={media.filter} />\n    </div>\n  ) : (\n    <NoResults />\n  );\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\nimport SearchLayout from '../SearchLayout';\nimport FiltersByCategories from '../FiltersByCategories';\nimport ResponseContent from './ResponseContent';\n\nexport default function ResponseLayout({ searchPosition, media }) {\n  return (\n    <>\n      <SearchLayout searchPosition={searchPosition} {...media} media={media} />\n      <div class={styles.response__layout}>\n        <br />\n        <FiltersByCategories data={media.data} filter={media.filter} />\n        <br />\n        <ResponseContent media={media} />\n      </div>\n    </>\n  );\n}\n/*\n\n        \n\n*/\n//TODO: fix and add noResults isError\n","export { default } from './ResponseLayout';\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport styles from './style.css';\n\nexport default function Loader({ text }) {\n  const loader_text = `${styles.loader} ${styles.text}`,\n    error = `${styles.loader} ${styles.error}`;\n  return text ? (\n    <div class={error} data-text=\"Houston, we have a problem\">\n      <p class={styles.error_text}>{text}</p>\n    </div>\n  ) : (\n    <div class={loader_text}></div>\n  );\n}\n","export { default } from './Loader';\n","import { useState, useEffect } from './hooks';\nimport { updateData, sortMedia, filterItems } from '../data/mediaData';\nimport { requestMedia } from '../data/imagesAPI';\n\nexport const useMedia = () => {\n  const searchParams = useSearchParams(),\n    data = useData(),\n    error = useError(),\n    sort = useSort(),\n    filter = useFilter(),\n    mediaRequest = useMediaRequest();\n\n  useEffect(() => {\n    async function performRequest() {\n      if (mediaRequest.isDataLoading) {\n        const dataReceived = await requestMedia();\n        if (!dataReceived.isError) {\n          updateData(dataReceived, data, filter, searchParams);\n          mediaRequest.setRequestMade(true);\n        } else {\n          error.setIsError(true);\n          error.setErrorMessage(dataReceived.errorText);\n        }\n        mediaRequest.setIsDataLoading(false);\n      }\n    }\n    performRequest();\n  }, [mediaRequest.isDataLoading]);\n\n  return { searchParams, data, error, sort, filter, mediaRequest };\n};\n\nexport const useMediaRequest = () => {\n  const [requestMade, setRequestMade] = useState(false);\n  const [allRequestsMade, setAllRequestsMade] = useState(false);\n  const [isDataLoading, setIsDataLoading] = useState(false);\n\n  return {\n    requestMade,\n    setRequestMade,\n    allRequestsMade,\n    setAllRequestsMade,\n    isDataLoading,\n    setIsDataLoading,\n  };\n};\n\nexport const useSearchParams = () => {\n  const [searchValue, setSearchValue] = useState(null);\n  const [mediaTypes, setMediaTypes] = useState([]);\n  return { searchValue, setSearchValue, mediaTypes, setMediaTypes };\n};\n\nexport const useData = requestMade => {\n  const [responseData, setResponseData] = useState([]);\n  const [flattenedData, setFlattenedData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [noResults, setNoResults] = useState(false);\n  const [totalHits, setTotalHits] = useState(null);\n\n  return {\n    responseData,\n    setResponseData,\n    flattenedData,\n    setFlattenedData,\n    filteredData,\n    setFilteredData,\n    noResults,\n    setNoResults,\n    totalHits,\n    setTotalHits,\n  };\n};\n\nexport const useSort = () => {\n  const [isSortingSet, setIsSortingSet] = useState(false);\n  const [sortingOption, setSortingOption] = useState(null);\n  return { isSortingSet, setIsSortingSet, sortingOption, setSortingOption };\n};\n\nexport const useFilter = () => {\n  const [filters, setFilters] = useState({});\n  const [selectedFiltersList, setSelectedFiltersList] = useState([]);\n  const [filtersSelected, setFiltersSelected] = useState(false);\n  const [performFiltering, setPerformFiltering] = useState(false);\n  return {\n    filters,\n    setFilters,\n    selectedFiltersList,\n    setSelectedFiltersList,\n    filtersSelected,\n    setFiltersSelected,\n    performFiltering,\n    setPerformFiltering,\n  };\n};\n\nexport const useError = () => {\n  const [isError, setIsError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  return { isError, setIsError, errorMessage, setErrorMessage };\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../../framework';\nimport ResponseLayout from '../ResponseLayout';\nimport Loader from '../Loader';\nimport SearchLayout from '../SearchLayout';\nimport { requestMedia } from '../../data/imagesAPI';\nimport { useMedia } from '../../framework/customHooks';\n\nexport default function App() {\n  const media = useMedia();\n  return (\n    <>\n      {media.mediaRequest.requestMade ? (\n        <ResponseLayout searchPosition={'top'} media={media} />\n      ) : media.mediaRequest.isDataLoading ? (\n        <Loader text={''} />\n      ) : media.error.isError ? (\n        <Loader text={media.error.errorMessage} />\n      ) : (\n        <SearchLayout searchPosition={'middle'} {...media} />\n      )}\n    </>\n  );\n}\n","export { default } from './App';\n","import { dataStore } from './data/dataStore.js';\nimport styles from './style.css';\nimport { render } from './framework';\nimport App from './components/App';\n\n//todo add pagination\nrender(App, document.getElementById('app-root'));\n"]}