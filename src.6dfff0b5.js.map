{"version":3,"sources":["data/dataStore.js","data/dataSettings.js","utils.js","data/imagesAPI.js","data/mediaData.js","framework/renderer.js","components/MediaTypeSwitcher/MediaTypeSwitcher.js","components/MediaTypeSwitcher/index.js","components/SearchInput/SearchInput.js","components/SearchInput/index.js","components/SearchButton/SearchButton.js","components/SearchButton/index.js","components/Logo/Logo.js","components/Logo/index.js","components/SearchLayout/SearchLayout.js","components/SearchLayout/index.js","components/FiltersByCategories/FilterItem.js","components/FiltersByCategories/FilterBlock.js","components/FiltersByCategories/Filters.js","components/FiltersByCategories/FiltersByCategories.js","components/FiltersByCategories/index.js","components/SortSelect/Option.js","components/SortSelect/SortOptions.js","components/SortSelect/SortSelect.js","components/SortSelect/index.js","components/SelectedFiltersLayout/SelectedFilter.js","components/SelectedFiltersLayout/SelectedFilters.js","components/SelectedFiltersLayout/FilterButton.js","components/SelectedFiltersLayout/SelectedFiltersLayout.js","components/SelectedFiltersLayout/index.js","components/MediaCards/Card.js","components/MediaCards/MediaCards.js","components/MediaCards/index.js","components/NoResults/NoResults.js","components/NoResults/index.js","components/ResponseLayout/ResponseContent.js","components/ResponseLayout/ResponseLayout.js","components/ResponseLayout/index.js","components/Loader/Loader.js","components/Loader/index.js","components/App/App.js","components/App/index.js","index.js"],"names":["dataStore","requestMade","searchValue","mediaTypes","filters","selectedFiltersList","sortingSet","filteredData","filtersSelected","performFiltering","sortingOption","totalHits","allRequestsMade","lastPage","isDataLoading","noResults","renderingData","responseData","isError","focusOnFilter","errorMessage","FILTERS_BY_MEDIA_TYPE","video","audio","image","FILTERS_TEXT","keywords","location","center","creator","bitrate","colorSpace","resolutionOrigin","album","MEDIA_TYPE_SORTING_OPTIONS","SORTING_OPTIONS_TEXT","duration","date","sizeValue","framerate","bitrateValue","resolutionValue","MEDATADA_KEYS_BY_MEDIA_TYPE","size","resolution","hasFilteringParameters","filter","Object","keys","length","isElementInArray","data","element","some","dataItem","toUpperCase","getNumberFromString","value","parseInt","undefined","getSeconds","Date","getTime","removeSpacesFromLink","link","split","join","replaceProtocolExtension","replace","fetchData","url","storage","fetch","catch","err","setError","flat","array","reduce","acc","current","concat","getParametersValueFromNodeList","parameter","nodeList","Array","from","map","item","removeClass","className","classList","remove","addClass","add","getItemByStringPattern","str","findIndex","includes","keywordIsASingleWord","keyword","requestMedia","searchInputValue","document","getElementById","requestURL","createRequestURL","window","renderApp","getDataPages","getAndPrepareMetadataForRendering","requestCollectionAndMetadata","flattenedData","collectionData","getCollectionData","metadataFromLinks","getMetadata","pagesCounter","then","json","responseBody","collection","links","nextPageLinkIndex","hasPage","hasNextPage","href","items","getAllPromisesData","getMetadataPromisesFromCollectionList","collectionDataItem","i","metadataLink","metadata","Promise","all","responseDataItem","linksList","linkItem","rel","searchByTerm","e","preventDefault","resetState","openHomePage","styles","no_image__background","body","updateMediaTypes","input","inputIndex","indexOf","push","splice","sortMedia","option","direction","target","sortByDirection","filterItems","forEach","categorie","isArray","selectFilter","getAttribute","isFilterSelected","removeFilter","name","filterName","deleteIndex","updateFocusState","querySelector","focus","isOptionNeeded","mediaType","ascending","sort","next","descending","getResponseData","getConciseContentFromRespond","previewImage","date_created","media_type","title","secondary_creator","nasa_id","getOnlySingleWordKeyword","id","getCreatorsList","getFiltersAndUpdate","getFiltersFromMetadata","changeStateToRequestMade","getFiltersFromLists","metadataItem","getFiltersDataFromMetadata","mediaMetadata","mediaKeysNeeded","key","transformKeyValueToNumber","filtersContainer","updateFilterValue","getMediaTypes","querySelectorAll","setSelectedMediaTypes","metadataValue","getImageAlbum","getDurationValueFromString","getSizeInKBFromString","getResolutionFromString","height","width","splitStringWithDifferentSeparator","time","match","getSecondsFromDurationValue","separatedTimeValues","parseDuration","hours","minutes","seconds","number","unit","toLowerCase","stringToSplit","errMessage","Component","Target","componentFunction","targetElementId","innerHTML","MediaTypeSwitcher","label","overflow","button","wrapper","SearchInput","search__input","SearchButton","search__button","Logo","require","logo","SearchLayout","searchPosition","form__wrapper","form_top","form_middle","form","search__box","FilterItem","filterCounter","filter__label","text","filter__counter","FilterBlock","filter__heading","filter__item_wrapper","filterContent","Filters","FiltersByCategories","filters__wrapper","Option","sortType","SortOptions","SortSelect","SelectedFilter","filterSelected","filter__selected_container","filter__selected","remove__filter","SelectedFilters","FilterButton","filter__button","SelectedFiltersLayout","selected__filters","Card","card__item","MediaCards","NoResults","wrap","no_results","ResponseContent","cards__wrapper","sort_hits_wrapper","total_hits","ResponseLayout","response__layout","Loader","loader","App"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,eAAA,EAAA,MAAMA,EAAY,CACvBC,aAAa,EACbC,YAAa,KACbC,WAAY,GACZC,QAAS,GACTC,oBAAqB,GACrBC,YAAY,EACZC,aAAc,GACdC,iBAAiB,EACjBC,kBAAkB,EAClBC,eAAe,EACfC,UAAW,KACXC,iBAAiB,EACjBC,UAAU,EACVC,eAAe,EACfC,WAAW,EACXC,eAAe,EACfC,aAAc,GACdC,SAAS,EACTC,cAAe,KACfC,aAAc,IApBT,QAAA,UAAA;;;;ACgCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,4BAAA,QAAA,qBAAA,QAAA,2BAAA,QAAA,aAAA,QAAA,2BAAA,EAhCA,MAAMC,EAAwB,CACnCC,MAAO,CAAC,WAAY,WAAY,WAChCC,MAAO,CAAC,WAAY,SAAU,WAC9BC,MAAO,CAAC,WAAY,UAAW,SAAU,aAAc,mBAAoB,UA6BtE,QAAA,sBAAA,EA1BA,MAAMC,EAAe,CAC1BC,SAAU,YACVC,SAAU,WACVC,OAAQ,SACRC,QAAS,gBACTC,QAAS,gBACTC,WAAY,oBACZC,iBAAkB,mBAClBC,MAAO,eAkBF,QAAA,aAAA,EAfA,MAAMC,EAA6B,CACxCZ,MAAO,CAAC,WAAY,OAAQ,YAAa,aACzCC,MAAO,CAAC,WAAY,OAAQ,YAAa,gBACzCC,MAAO,CAAC,OAAQ,YAAa,oBAYxB,QAAA,2BAAA,EATA,MAAMW,EAAuB,CAClCC,SAAU,WACVC,KAAM,gBACNC,UAAW,YACXC,UAAW,aACXC,aAAc,UACdC,gBAAiB,cAGZ,QAAA,qBAAA,EAAA,MAAMC,EAA8B,CACzCpB,MAAO,CACLK,SAAU,iBACVY,UAAW,2BACXH,SAAU,qBACVO,KAAM,iBAERnB,MAAO,CACLO,WAAY,kBACZY,KAAM,gBACNC,WAAY,sBACZX,MAAO,eAETV,MAAO,CACLO,QAAS,oBACTM,SAAU,qBACVO,KAAM,kBAhBH,QAAA,4BAAA;;ACkBN,aAlDM,SAASE,EAAuBC,GAC9BC,OAAAA,OAAOC,KAAKF,GAAQG,OAGtB,SAASC,EAAiBC,EAAMC,GAC9BD,OAAAA,EAAKE,KAAKC,GAAYA,EAASC,gBAAkBH,GAGnD,SAASI,EAAoBC,GAC3BA,OAAAA,EAAQC,SAASD,QAASE,EAG5B,SAASC,EAAWvB,GAClB,OAAA,IAAIwB,KAAKxB,GAAMyB,UAGjB,SAASC,EAAqBC,GAC5BA,OAAS,OAATA,EAAgBA,EAAKC,MAAM,KAAKC,KAAK,OAAS,KAGhD,SAASC,EAAyBH,GAChCA,OAAAA,EAAKI,QAAQ,WAAY,SAG3B,SAASC,EAAUC,EAAKC,GACtBC,OAAAA,MAAMF,GAAKG,MAAMC,GAAOC,SAASD,EAAKH,IAGxC,SAASK,EAAKC,GACZA,OAAAA,EAAMC,OAAO,CAACC,EAAKC,IAAYD,EAAIE,OAAOD,GAAU,IAGtD,SAASE,EAA+BC,EAAWC,GACjDC,OAAAA,MAAMC,KAAKF,GAAUG,IAAIC,GAAQA,EAAKL,IAGxC,SAASM,EAAYC,EAAWtC,GACrCA,EAAQuC,UAAUC,OAAOF,GAGpB,SAASG,EAASH,EAAWtC,GAClCA,EAAQuC,UAAUG,IAAIJ,GAGjB,SAASK,EAAuBC,EAAK7C,GACnCA,OAAAA,EAAKA,EAAK8C,UAAU3C,GAAYA,EAAS4C,SAASF,KAGpD,SAASG,EAAqBC,GAC5BA,OAA8B,IAA9BA,EAAQnC,MAAM,KAAKhB,SAAiBS,SAAS0C,GACrD,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,uBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,WAAA,EAAA,QAAA,qBAAA,EAAA,QAAA,yBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,KAAA,EAAA,QAAA,+BAAA,EAAA,QAAA,YAAA,EAAA,QAAA,SAAA,EAAA,QAAA,uBAAA,EAAA,QAAA,qBAAA;;ACyDA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,6BAAA,EAAA,QAAA,kCAAA,EA3GD,IAAA,EAAA,QAAA,eAQA,EAAA,QAAA,YAEO,eAAeC,EAAa9B,GAC3B+B,MAAAA,EAAmBC,SAASC,eAAe,eAAe/C,MAC9DtD,GAAa,EADf,EAAA,iBAEIsG,IAAAA,EAAaC,EAAiBJ,EAAkBnG,GACpDoE,EAAQpE,YAAa,EAAsBA,EAAAA,uBAAAA,GAC3CoE,EAAQrE,YAAcoG,EACtB/B,EAAQtD,aAAe,GAEvB0F,OAAOC,kBAEDC,EAAatC,EAASkC,SACtBK,EAAkCvC,GAGnC,eAAewC,EAA6BxC,GAC7C,IAACA,EAAQrD,QAAS,CACpBqD,EAAQyC,eAAgB,EAAgBzC,EAAAA,iBAAAA,GACnCA,EAAQyC,cAAc/D,SAAQsB,EAAQxD,WAAY,GACjDkG,MAAAA,QAAuBC,EAAkB3C,EAAQyC,cAAezC,GAE/D4C,aADqBC,EAAY7C,EAAQyC,cAAeC,EAAgB1C,IAKnF,eAAesC,EAAatC,EAASkC,GAC/BY,IAAAA,EAAe,EACZ,MAAC9C,EAAQ3D,uBACR4D,MAAMiC,GACTa,KAAKnE,GAAQA,EAAKoE,QAClBD,KAAKE,IACAA,GAAAA,EAAaC,WAAWC,MAAO,CAC3B,MAAA,kBAAEC,EAAF,QAAqBC,GAAYC,EAAYL,EAAaC,WAAWC,OACtD,IAAjBL,GAAuBO,GAGzBnB,GAAa,EACXe,EAAAA,0BAAAA,EAAaC,WAAWC,MAAMC,GAAmBG,MAEnDT,KALA9C,EAAQ3D,iBAAkB,OAQ5B2D,EAAQ3D,iBAAkB,EAE5B2D,EAAQtD,aAAesD,EAAQtD,aAAagE,OAAOuC,EAAaC,WAAWM,SAE5EtD,MAAMC,KACIA,EAAAA,EAAAA,UAAAA,EAAKH,KAKf,eAAeuC,EAAkCvC,GAChD4C,MAAAA,QAA0BJ,EAA6BxC,SACvD,EAAoBA,EAAAA,qBAAAA,EAAS4C,GACnCR,OAAOC,YAGT,SAASM,EAAkB/D,EAAMoB,GAExByD,OAAAA,EADU7E,EAAKoC,IAAIjC,IAAY,EAAUA,EAAAA,WAAAA,EAASwE,KAAMvD,IAC3BA,GAGtC,SAAS0D,EAAsC9E,EAAM8D,EAAgB1C,GAC5D0C,OAAAA,EAAe1B,IAAI,CAAC2C,EAAoBC,KACvCC,MAAAA,GAAe,EAAuB,EAAA,wBAAA,gBAAiBF,GAEtD,OADP/E,EAAKgF,GAAGE,UAAW,EAAyBD,EAAAA,0BAAAA,IACrC,EAAUjF,EAAAA,WAAAA,EAAKgF,GAAGE,SAAU9D,KAIvC,SAAS6C,EAAYjE,EAAM8D,EAAgB1C,GAElCyD,OAAAA,EADsBC,EAAsC9E,EAAM8D,EAAgB1C,GACzCA,GAGlD,SAASyD,EAAmB7E,EAAMoB,GACzB+D,OAAAA,QAAQC,IAAIpF,GAChBmE,KAAKrG,GACJqH,QAAQC,IAAItH,EAAasE,IAAIiD,GAAoBA,EAAiBjB,UAEnE9C,MAAMC,KACIA,EAAAA,EAAAA,UAAAA,EAAKH,KAIpB,SAASsD,EAAYY,GACbd,MAAAA,EAAoBc,EAAUxC,UAAU,CAACyC,EAAUP,IAAuB,SAAjBO,EAASC,KACjEhB,OAAuB,IAAvBA,EACH,CAAEC,SAAS,EAAMD,kBAAAA,GACjB,CAAEC,SAAS,EAAOD,kBAAAA,GAGxB,SAASjB,EAAiBJ,EAAkBnG,GAElC,8CAAemG,IACrBnG,EAAW8C,sBAAwB9C,EAAW+D,KAAK,OAAS;;ACuO/D,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,QAAA,aAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,UAAA,EAAA,QAAA,YAAA,EAAA,QAAA,aAAA,EAAA,QAAA,aAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,iBAAA,EAAA,QAAA,eAAA,EAAA,QAAA,gBAAA,EAAA,QAAA,oBAAA,EAAA,QAAA,cAAA,EAAA,QAAA,sBAAA,EAAA,QAAA,SAAA,EAAA,QAAA,WAAA,EAAA,QAAA,qBAAA,EAhVD,IAAA,EAAA,QAAA,kBAQA,EAAA,QAAA,YAWA,EAAA,QAAA,eACA,EAAA,EAAA,QAAA,eA4TC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA1TM,SAAS0E,EAAarE,EAASsE,GACpCA,EAAEC,iBACFC,EAAWxE,GACXA,EAAQzD,eAAgB,GACXyD,EAAAA,EAAAA,cAAAA,GAGR,SAASyE,EAAazE,EAASsE,GACpCA,EAAEC,iBACFvE,EAAQtE,aAAc,EACtBsE,EAAQrE,YAAc,KACtBqE,EAAQpE,WAAa,GACrB4I,EAAWxE,IACE,EAAA,EAAA,gBAAE0E,EAAOC,QAAAA,uBAAwB3C,SAAS4C,MAGlD,SAASC,EAAiB7E,EAAS8E,GAClCC,MAAAA,EAAa/E,EAAQpE,WAAWoJ,QAAQF,EAAM5F,QAChC,IAAhB6F,EACF/E,EAAQpE,WAAWqJ,KAAKH,EAAM5F,OAE9Bc,EAAQpE,WAAWsJ,OAAOH,EAAY,GAInC,SAASI,EAAUnF,EAASsE,GAC3B1F,MAAAA,EAAOoB,EAAQ/D,gBAAkB+D,EAAQhE,aAAegE,EAAQyC,eACnE2C,EAAQC,GAAaf,EAAEgB,OAAOpG,MAAMQ,MAAM,KAC7CM,EAAQ7D,cAAgBmI,EAAEgB,OAAOpG,MACjCc,EAAQjE,YAAa,EACrBwJ,EAAgBF,GAAWzG,EAAMwG,GAG5B,SAASI,EAAYxF,GAC1BA,EAAQ9D,kBAAmB,EAC3B8D,EAAQhE,aAAe,GACvBgE,EAAQlE,oBAAoB2J,QAAQlH,IAC5BmH,MAAAA,EAAYnH,EAAOmH,UACzB1F,EAAQyC,cAAcgD,QAAQ1G,KACoB,IAA5CiB,EAAQhE,aAAagJ,QAAQjG,IAAoBA,EAAS2G,KACxD5E,MAAM6E,QAAQ5G,EAAS2G,KACrB,EAAiB3G,EAAAA,kBAAAA,EAAS2G,GAAYnH,EAAOW,QAC/Cc,EAAQhE,aAAaiJ,KAAKlG,GAGxBA,EAAS2G,GAAW1G,gBAAkBT,EAAOW,OAC/Cc,EAAQhE,aAAaiJ,KAAKlG,QAMpCiB,EAAQpD,cAAgB,KACxBoD,EAAQ5D,UAAY4D,EAAQhE,aAAa0C,OAGpC,SAASkH,EAAa5F,EAASzB,GAC9B,MAAA,MAAEW,GAAUX,EAChBmH,EAAYnH,EAAOsH,aAAa,kBAClC7F,EAAQ/D,iBAAkB,EACrB6J,EAAiB9F,EAAQlE,oBAAqBoD,EAAOwG,IAIxDK,EAAa/F,EAASzB,GACtByB,EAAQpD,cAAgB,OAJxBoD,EAAQlE,oBAAoBmJ,KAAK,CAAE/F,MAAAA,EAAOwG,UAAAA,IAC1C1F,EAAQpD,cAAgB2B,EAAOyH,MAO5B,SAASD,EAAa/F,EAASzB,GAC9B,MAAEW,MAAO+G,GAAe1H,EAC5BmH,EAAYnH,EAAOsH,aAAa,kBAChCK,EAAclG,EAAQlE,oBAAoB4F,UACxC7C,GAAWA,EAAQK,QAAU+G,GAAcP,IAAc7G,EAAQ6G,WAErE1F,EAAQpD,cAAgB,KACxBoD,EAAQlE,oBAAoBoJ,OAAOgB,EAAa,GAC3ClG,EAAQlE,oBAAoB4C,SAC/BsB,EAAQ9D,kBAAmB,EAC3B8D,EAAQ/D,iBAAkB,EAC1B+D,EAAQ5D,UAAY4D,EAAQyC,cAAc/D,QAIvC,SAASyH,IACoB,OAA9B/D,OAAOxD,KAAKhC,eACdoF,SAASoE,wBAAwBhE,OAAOxD,KAAKhC,mBAAmByJ,QAG7D,SAASP,EAAiB7J,EAAiBgK,EAAYP,GACrDzJ,OAAAA,EAAgB6C,KACrBP,GAAUA,EAAOmH,YAAcA,GAAanH,EAAOW,QAAU+G,GAI1D,SAASK,EAAetG,EAASoF,GAC/BpF,OAAAA,EAAQpE,WAAWkD,KAAKyH,IACqC,IAA3D5I,EAA2B4I,2BAAAA,GAAWvB,QAAQI,IAIlD,MAAMG,EAAkB,CAC7BiB,UAAW,SAAU5H,EAAMwG,GACzBxG,EAAK6H,KAAK,CAAChG,EAASiG,KAAUjG,EAAQ2E,IAAU3E,EAAQ2E,GAAUsB,EAAKtB,KAEzEuB,WAAY,SAAU/H,EAAMwG,GAC1BxG,EAAK6H,KAAK,CAAChG,EAASiG,KAAUjG,EAAQ2E,IAAUsB,EAAKtB,GAAU3E,EAAQ2E,MAIpE,SAASwB,EAAgB5G,GACvB6G,OAAAA,EAA6B7G,EAAQtD,cAG9C,SAASmK,EAA6BrD,GAC7BA,OAAAA,EAAMxC,IAAIC,IACT,MAAA,KAAErC,EAAF,KAAQ2E,EAAMJ,QAAUI,KAAMuD,IAAkB,CAAC,CAAEvD,KAAM,QAAYtC,GACrE,SACJ9D,EADI,aAEJ4J,EAFI,OAGJ1J,EAHI,WAIJ2J,EAJI,MAKJC,EALI,kBAMJC,EAAoB,KANhB,QAOJC,GACEvI,EAAK,GACF,MAAA,CACLzB,SAAUiK,EAAyBjK,GACnCW,MAAM,EAAWiJ,EAAAA,YAAAA,GACjBM,GAAIF,EACJF,MAAAA,EACA5J,OAAAA,EACAyJ,cAAc,EAAqBA,EAAAA,sBAAAA,GACnCvD,KAAAA,EACAgD,UAAWS,EACX1J,QAASgK,EAAgBJ,MAKxB,eAAeK,EAAoBvH,EAAS8D,SAC3C0D,EAAuB1D,EAAU9D,EAAQyC,eAC/CzC,EAAQzD,eAAgB,EACxBkL,EAAyBzH,GACzB0H,EAAoB1H,EAAQyC,cAAezC,EAAQpE,WAAYoE,EAAQnE,SACvEmE,EAAQ5D,UAAY4D,EAAQyC,cAAc/D,OAG5C,SAAS8I,EAAuB1D,EAAUlF,GACjCkF,OAAAA,EAAS2B,QAAQ,CAACkC,EAAc/D,KACrCgE,EAA2BD,EAAc/I,EAAKgF,MAIlD,SAASgE,EAA2B3E,EAAclE,GAC1C8I,MAAAA,EAAgB5E,EACpB6E,EAAkB3J,EAA4BY,4BAAAA,EAASwH,WACzD/H,OAAOC,KAAKqJ,GAAiBrC,QAAQsC,IACnCC,EAA0BD,EAAKhJ,EAAU8I,EAAcC,EAAgBC,OAI3E,SAASL,EAAoB9I,EAAMhD,EAAYqM,GAC7CrJ,EAAK6G,QAAQ1G,IACXnD,EAAW6J,QAAQc,IACKA,EAAAA,sBAAAA,GAAWd,QAAQsC,IAClCE,EAAiBF,KACpBE,EAAiBF,GAAO,IAEtBhJ,EAASgJ,KACPjH,MAAM6E,QAAQ5G,EAASgJ,IACzBhJ,EAASgJ,GAAKtC,QAAQ5D,IAChB0E,IAAcxH,EAASwH,WACzB2B,EAAkBD,EAAiBF,GAAMlG,KAI7CqG,EAAkBD,EAAiBF,GAAMhJ,EAASgJ,WAQ9D,SAASG,EAAkBD,EAAkBpG,QAC3BzC,IAAZyC,IACGoG,EAAiBpG,EAAQ7C,eAG5BiJ,EAAiBpG,EAAQ7C,iBAFzBiJ,EAAiBpG,EAAQ7C,eAAiB,GAOzC,SAASmJ,IACRvM,MAAAA,EAAaoG,SAASoG,iBAAiB,mCACtC,OAAA,EAA+B,EAAA,gCAAA,QAASxM,GAG1C,SAASyM,EAAsBzM,GAC7BA,OAAAA,EAAW8C,OAAS9C,EAAa,KAG1C,SAASwL,EAAyBjK,GACzBA,OAAAA,EAAWA,EAASoB,OAAOsD,IAAW,EAAqBA,EAAAA,sBAAAA,IAAY,UAGhF,SAASmG,EAA0BD,EAAKhJ,EAAUuJ,GAC5CA,GAAAA,EACMP,OAAAA,GACD,IAAA,QACHhJ,EAASgJ,GAAOQ,EAAcD,GAC9B,MACG,IAAA,WACHvJ,EAASgJ,GAAOS,EAA2BF,GAC3C,MACG,IAAA,OACHvJ,EAASgJ,GAAOU,EAAsBH,GACtCvJ,KAAYgJ,UAAchJ,EAASgJ,GAAK7I,MACxC,MACG,IAAA,UACHH,KAAYgJ,WAAc,EAAoBO,EAAAA,qBAAAA,GAC9CvJ,EAASgJ,GAAOO,EAChB,MACG,IAAA,aACHvJ,EAASgJ,GAAOW,EAAwBJ,GACxCvJ,KAAYgJ,WAAeO,EAC3BvJ,KAAYgJ,UAAchJ,EAASgJ,GAAKY,OAAS5J,EAASgJ,GAAKa,MAC/D,MACF,QACE7J,EAASgJ,GAAOO,OAGpBvJ,EAASgJ,GAAOO,EAIpB,SAAShB,EAAgBhK,GAChBA,OAAY,OAAZA,EAAmBuL,EAAkCvL,GAAW,CAAC,WAG1E,SAASkL,EAA2B3K,GAC9BA,GAAAA,GAAyB,OAAbA,EAAmB,CAC3BiL,MAAAA,EAAOjL,EAASkL,MAAM,uBACrBD,OAAS,OAATA,EAAgBE,EAA4BF,EAAK,SAAM1J,GAKlE,SAAS4J,EAA4BF,GAC7BG,MAAAA,EAAsBC,EAAcJ,IACvCK,EAAOC,EAASC,GAAWJ,EACvBE,OAAQ,KAARA,EAAyB,GAAVC,EAAeC,EAGvC,SAASH,EAAcJ,GACdA,OAAAA,EAAKpJ,MAAM,KAAKsB,IAAIC,GAAQ9B,SAAS8B,IAG9C,SAASsH,EAAcrJ,GACd,OAACA,GAAQ,UAGlB,SAASuJ,EAAsBvJ,GACvB,MAACoK,EAAQC,GAAQrK,EAAMQ,MAAM,KAC3B6J,OAAAA,EAAKvK,eACN,IAAA,KACI,MAAA,CAAEsK,OAAAA,EAAQC,KAAAA,EAAMrK,OAAO,EAAoBoK,EAAAA,qBAAAA,IAC/C,IAAA,KACI,MAAA,CAAEA,OAAAA,EAAQC,KAAAA,EAAMrK,MAAqC,MAA9B,EAAoBoK,EAAAA,qBAAAA,IAC/C,IAAA,KACI,MAAA,CAAEA,OAAAA,EAAQC,KAAAA,EAAMrK,MAAqC,MAA9B,EAAoBoK,EAAAA,qBAAAA,GAAiB,OAIzE,SAASZ,EAAwBxJ,GACzB,MAACyJ,EAAQC,GAAS1J,EAAMsK,cAAc9J,MAAM,KAC3C,MAAA,CAAEiJ,QAAQ,EAAoBA,EAAAA,qBAAAA,GAASC,OAAO,EAAoBA,EAAAA,qBAAAA,GAAQ1J,MAAAA,GAGnF,SAAS2J,EAAkCY,GAErCA,OAAgC,KADpCA,EAAgBA,EAAc5J,QAAQ,gBAAiB,KACrCmF,QAAQ,KACjByE,EAAc/J,MAAM,MAEpB+J,EAAc/J,MAAM,KAIxB,SAASU,EAASsJ,EAAY1J,GACnCA,EAAQzD,eAAgB,EACxByD,EAAQ3D,iBAAkB,EAC1B2D,EAAQrD,SAAU,EAClBqD,EAAQnD,wBAA0B6M,gCAClCtH,OAAOC,YAGF,SAASmC,EAAWxE,GACzBA,EAAQ5D,UAAY,KACpB4D,EAAQjE,YAAa,EACrBiE,EAAQtE,aAAc,EACtBsE,EAAQpD,cAAgB,KACxBoD,EAAQlE,oBAAsB,GAC9BkE,EAAQ9D,kBAAmB,EAC3B8D,EAAQ/D,iBAAkB,EAC1B+D,EAAQnE,QAAU,GAClBmE,EAAQxD,WAAY,EACpBwD,EAAQ3D,iBAAkB,EAG5B,SAASoL,EAAyBzH,GAChCA,EAAQtE,aAAc,GACZ,EAAA,EAAA,aAAEgJ,EAAOC,QAAAA,uBAAwB3C,SAAS4C,MACrD,QAAA,gBAAA;;ACrUA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAXD,IAAA,EAAA,QAAA,qBAEA,IAAI+E,EAAWC,EAEA,SAASvH,EAAUwH,EAAmBC,GAC/CD,IAAmBF,EAAYE,GAC/BC,IAAiBF,EAASE,GAC9B9H,SAASC,eAAe2H,GAAQG,uBACxBJ,aAER,EAAA,EAAA;;;;;;;;ACoBD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EA9BD,IAAA,EAAA,EAAA,QAAA,gBA8BC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA5Bc,SAASK,EAAkBhK,GAChC,qDACkC0E,EAAOuF,QAAAA,SAASvF,EAAOwF,QAAAA,iBAC/DlK,EAAQpE,WAAW8C,OAASsB,EAAQpE,WAAW+D,KAAK,MAAQ,6DAE9B+E,EAAOyF,QAAAA,oDACzBzF,EAAO0F,QAAAA,kBACjB,CAAC,QAAS,QAAS,SAClBpJ,IAAIuF,8FAIuB7B,EAAO6B,QAAAA,oLAGVA,wCACGA,gCAEPvG,EAAQpE,WAAW8C,SAAqD,IAA3CsB,EAAQpE,WAAWoJ,QAAQuB,GACnD,UACA,gCAENA,MAAcA,2CAIjC5G,KAAK;;AC5BZ,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,wBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACSC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EATD,IAAA,EAAA,EAAA,QAAA,gBASC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPc,SAAS0K,EAAYrK,GAC1B,sJAGgB0E,EAAO4F,QAAAA,gIAEiB,OAAxBtK,EAAQrE,YAAuBqE,EAAQrE,YAAe;;ACRhF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,kBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACMC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAND,IAAA,EAAA,EAAA,QAAA,gBAMC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAJc,SAAS4O,IACd,wBAAiB7F,EAAO8F,QAAAA,mBAC7BpI,OAAOxD,KAAKhD,WAAW8C,QAAW0D,OAAOxD,KAAKjD,YAAsC,GAAvB;;ACJlE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,mBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;;;ACOC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAPD,IAAA,EAAA,EAAA,QAAA,gBAOC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALc,SAAS8O,IACd,mHAEQC,QAAQ,wCAAwChG,EAAOiG,QAAAA;;ACLzE,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,WAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACsBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAtBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,mBACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,YAkBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAhBc,SAASC,EAAaC,GAC3B,2BACQnG,EAAOoG,QAAAA,iBACF,QAAnBD,KAA8BnG,EAAOqG,QAAAA,cAAgBrG,EAAOsG,QAAAA,wBAEvC,QAAnBH,GAA2B,EAA3B,EAAA,WAAqC,4FAErCnG,EAAOuG,QAAAA,iCAEOvG,EAAOwG,QAAAA,+BACjB,EAAkB9I,EAAAA,SAAAA,OAAOxD,mBACzB,EAAYwD,EAAAA,SAAAA,OAAOxD,iCAEnB,EAAe,EAAA;;ACnBzB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,mBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACoBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EApBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,2BAmBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAjBc,SAASuM,EAAWlF,EAAYmF,EAAe1F,GACpD,6BACUhB,EAAO2G,QAAAA,yCACLpF,sBACNA,+BACUP,0CAGhB,EAAiBtD,EAAAA,kBAAAA,OAAOxD,KAAK9C,oBAAqBmK,EAAYP,GACzD,oBACA,oGAGMhB,EAAO4G,QAAAA,SAASrF,iCAChBvB,EAAO6G,QAAAA,qBAAqBH;;ACAhD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAjBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,iBAeC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbc,SAASI,EAAYvD,EAAkBhC,GAC5C,oBAAavB,EAAO+G,QAAAA,oBAAoBvO,EAAa+I,aAAAA,oCACrCvB,EAAOgH,QAAAA,yCACjBlN,OAAOC,KAAKwJ,EAAiBhC,IAC5BjF,IAAI2K,IACI,EACLA,EAAAA,SAAAA,EACA1D,EAAiBhC,GAAY0F,GAC7B1F,IAGHtG,KAAK;;ACFrB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAbD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,kBAWC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GATc,SAASiM,EAAQ3D,GACvBzJ,OAAAA,OAAOC,KAAKwJ,GAChBjH,IAAIiF,IACC,EAAuBgC,EAAAA,wBAAAA,EAAiBhC,QAChC,EAAYgC,EAAAA,SAAAA,EAAkBhC,KAEnC,IAERtG,KAAK;;ACFT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAVD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,cASC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPc,SAASkM,IACfzJ,OAAAA,OAAOxD,KAAKpC,UACf,oCAEwBkI,EAAOoH,QAAAA,4BAC/B,EAAQ1J,EAAAA,SAAAA,OAAOxD,KAAK/C;;ACR1B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,0BAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACgBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAhBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,2BAeC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAbc,SAASkQ,EAAO/L,EAASoF,EAAQ4G,GACtC,wCACa5G,KAAU4G,6BACVtH,EAAOU,QAAAA,0BAEdpF,EAAQjE,YAAciE,EAAQ7D,mBAAqBiJ,KAAU4G,IACxD,sBACD,yCAGFpO,EAAqBwH,qBAAAA,yBACR,cAAb4G,EAA2B,UAAY;;ACGxD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAjBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,QAAA,2BACA,EAAA,QAAA,wBACA,EAAA,EAAA,QAAA,aAcC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAZc,SAASC,EAAYjM,GAC3BxB,OAAAA,OAAOC,KAAKb,EAAZ,sBACJoD,IAAIoE,IACC,IAAA,EAAepF,EAAAA,gBAAAA,EAASoF,GACnB,MAAA,CAAC,YAAa,cAClBpE,IAAIgL,OACO,EAAOhM,EAAAA,SAAAA,EAASoF,EAAQ4G,MAEnCrM,KAAK,MAGXA,KAAK;;ACJT,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAZD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,kBAWC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GATc,SAASuM,IACd,wKAKF,EAAY9J,EAAAA,SAAAA,OAAOxD;;ACT3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,iBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACSC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EATD,IAAA,EAAA,EAAA,QAAA,gBASC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAPc,SAASuN,EAAeC,GAC7B,qBAAc1H,EAAO2H,QAAAA,0DACJ3H,EAAO4H,QAAAA,qBAAqBF,EAAe1G,cAAc0G,EAAelN,4CACtEwF,EAAO6H,QAAAA,yHAEbH,EAAelN,0BAA0BkN,EAAe1G;;ACF9E,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EALD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,qBAIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFc,SAAS8G,EAAgBxM,GAC9B,SAAEA,EAAQlE,oBAAoBkF,IAAIzC,IAAU,EAAeA,EAAAA,SAAAA,IAASoB,KAAK;;ACClF,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EALD,IAAA,EAAA,EAAA,QAAA,gBAKC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAHc,SAAS8M,IACd,4FACW/H,EAAOgI,QAAAA;;ACK3B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EATD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,mBAOC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALc,SAASC,EAAsB3M,GACpC,qBAAc0E,EAAOkI,QAAAA,8BACvB5M,EAAQ/D,iBAAkB,EAAgB+D,EAAAA,SAAAA,GAAW,aACrDA,EAAQlE,oBAAoB4C,QAAS,EAArC,EAAA,WAAsD;;ACP9D,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,4BAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;;;ACoBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EApBD,IAAA,EAAA,EAAA,QAAA,gBAoBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAlBc,SAASmO,EAAK9N,GACnB,yBACM2F,EAAOoI,QAAAA,oBAEM,UAAvB/N,EAASwH,aACF7B,EAAO1H,QAAAA,QACa,UAAvB+B,EAASwH,aACN7B,EAAO3H,QAAAA,WACP2H,EAAOzH,QAAAA,sBAEV8B,EAASsI,6BACItI,EAAS+H,yDAGA,OAA1B/H,EAAS+H,aAAwB/H,EAAS+H,aAAe4D,QAAQ,oDAErD3L,EAASkI;;ACZ1B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAND,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,WAKC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAHc,SAAS8F,EAAW/M,GAEzB,UADMA,EAAQ9D,iBAA2C8D,EAAQhE,aAAhCgE,EAAQyC,eAClCzB,IAAIjC,IAAY,EAAKA,EAAAA,SAAAA,IAAWY,KAAK;;ACLtD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,iBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACOC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAPD,IAAA,EAAA,EAAA,QAAA,gBAOC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GALc,SAASqN,IACd,yBACMtI,EAAOuI,QAAAA,0BACNvI,EAAOwI,QAAAA;;ACLxB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,gBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACqBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EArBD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,6BACA,EAAA,EAAA,QAAA,kBACA,EAAA,EAAA,QAAA,iBAiBC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAfc,SAASC,IACf,OAAC/K,OAAOxD,KAAKpC,WAahB,EAbJ,EAAA,8BAEckI,EAAO0I,QAAAA,uDACL1I,EAAO2I,QAAAA,yCACN3I,EAAO4I,QAAAA,oCACLlL,OAAOxD,KAAKxC,iBAAiBgG,OAAOxD,KAAKjD,sCAEtD,EAAa,EAAA,gCAEf,EAAsByG,EAAAA,SAAAA,OAAOxD,eAC7B,EAAWwD,EAAAA,SAAAA,OAAOxD;;ACHvB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAdD,IAAA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,oBACA,EAAA,EAAA,QAAA,2BACA,EAAA,EAAA,QAAA,sBAWC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GATc,SAAS2O,EAAe1C,GAC7B,cACN,EAAaA,EAAAA,SAAAA,qBACDnG,EAAO8I,QAAAA,oCAElB,EAAsB,EAAA,4BAEtB,EAAkB,EAAA;;ACZvB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,qBAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;;;ACIC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAJD,IAAA,EAAA,EAAA,QAAA,gBAIC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAFc,SAASC,EAAOhM,GACrB,qBAAciD,EAAOgJ,QAAAA,qBAAqBjM;;ACHpD,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,aAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACcC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA,EAdD,IAAA,EAAA,EAAA,QAAA,sBACA,EAAA,EAAA,QAAA,cACA,EAAA,EAAA,QAAA,oBAYC,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAVc,SAASkM,IACd,SACNvL,OAAOxD,KAAKlD,aACR,EAAe,EAAA,SAAA,OACf0G,OAAOxD,KAAKrC,eACZ,EAAO,EAAA,SAAA,IACP6F,OAAOxD,KAAKjC,SACZ,EAAOyF,EAAAA,SAAAA,OAAOxD,KAAK/B,eACnB,EAAa,EAAA,SAAA;;ACZrB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,OAAA,eAAA,QAAA,UAAA,CAAA,YAAA,EAAA,IAAA,WAAA,OAAA,EAAA,WAAA,IAAA,EAAA,EAAA,QAAA,UAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA;;ACyBA,aAzBA,IAAA,EAAA,QAAA,uBACA,EAAA,EAAA,QAAA,gBACA,EAAA,EAAA,QAAA,yBACA,EAAA,EAAA,QAAA,qBACA,EAAA,QAAA,oBAqBA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAXAuF,OAAOxD,KAAOnD,EAAd,UAEA2G,OAAOC,UAAYA,EAAnB,QACAD,OAAOqC,aAAeA,EAAtB,aACArC,OAAOiC,aAAeA,EAAtB,aACAjC,OAAOyC,iBAAmBA,EAA1B,iBACAzC,OAAOwD,aAAeA,EAAtB,aACAxD,OAAO+C,UAAYA,EAAnB,UACA/C,OAAOoD,YAAcA,EAArB,YACApD,OAAO2D,aAAeA,EAAtB,aAEA3D,OAAOC,UAAUsL,EAAjB,QAAsB","file":"src.6dfff0b5.js","sourceRoot":"../src","sourcesContent":["export const dataStore = {\n  requestMade: false,\n  searchValue: null,\n  mediaTypes: [],\n  filters: {},\n  selectedFiltersList: [],\n  sortingSet: false,\n  filteredData: [],\n  filtersSelected: false,\n  performFiltering: false,\n  sortingOption: false,\n  totalHits: null,\n  allRequestsMade: false,\n  lastPage: false,\n  isDataLoading: false,\n  noResults: false,\n  renderingData: false,\n  responseData: [],\n  isError: false,\n  focusOnFilter: null,\n  errorMessage: '',\n};\n","export const FILTERS_BY_MEDIA_TYPE = {\n  video: ['keywords', 'location', 'creator'],\n  audio: ['keywords', 'center', 'bitrate'],\n  image: ['keywords', 'creator', 'center', 'colorSpace', 'resolutionOrigin', 'album'],\n};\n\nexport const FILTERS_TEXT = {\n  keywords: 'key terms',\n  location: 'location',\n  center: 'center',\n  creator: 'media creator',\n  bitrate: 'audio bitrate',\n  colorSpace: 'image color space',\n  resolutionOrigin: 'image resolution',\n  album: 'image album',\n};\n\nexport const MEDIA_TYPE_SORTING_OPTIONS = {\n  video: ['duration', 'date', 'sizeValue', 'framerate'],\n  audio: ['duration', 'date', 'sizeValue', 'bitrateValue'],\n  image: ['date', 'sizeValue', 'resolutionValue'],\n};\n\nexport const SORTING_OPTIONS_TEXT = {\n  duration: 'duration',\n  date: 'creation date',\n  sizeValue: 'file size',\n  framerate: 'frame rate',\n  bitrateValue: 'bitrate',\n  resolutionValue: 'resolution',\n};\n\nexport const MEDATADA_KEYS_BY_MEDIA_TYPE = {\n  video: {\n    location: 'AVAIL:Location',\n    framerate: 'QuickTime:VideoFrameRate',\n    duration: 'QuickTime:Duration',\n    size: 'File:FileSize',\n  },\n  image: {\n    colorSpace: 'EXIF:ColorSpace',\n    size: 'File:FileSize',\n    resolution: 'Composite:ImageSize',\n    album: 'AVAIL:Album',\n  },\n  audio: {\n    bitrate: 'MPEG:AudioBitrate',\n    duration: 'Composite:Duration',\n    size: 'File:FileSize',\n  },\n};\n","export function hasFilteringParameters(filter) {\n  return Object.keys(filter).length;\n}\n\nexport function isElementInArray(data, element) {\n  return data.some(dataItem => dataItem.toUpperCase() === element);\n}\n\nexport function getNumberFromString(value) {\n  return value ? parseInt(value) : undefined;\n}\n\nexport function getSeconds(date) {\n  return new Date(date).getTime();\n}\n\nexport function removeSpacesFromLink(link) {\n  return link !== null ? link.split(' ').join('%20') : null;\n}\n\nexport function replaceProtocolExtension(link) {\n  return link.replace(/(http)/gm, 'https');\n}\n\nexport function fetchData(url, storage) {\n  return fetch(url).catch(err => setError(err, storage));\n}\n\nexport function flat(array) {\n  return array.reduce((acc, current) => acc.concat(current), []);\n}\n\nexport function getParametersValueFromNodeList(parameter, nodeList) {\n  return Array.from(nodeList).map(item => item[parameter]);\n}\n\nexport function removeClass(className, element) {\n  element.classList.remove(className);\n}\n\nexport function addClass(className, element) {\n  element.classList.add(className);\n}\n\nexport function getItemByStringPattern(str, data) {\n  return data[data.findIndex(dataItem => dataItem.includes(str))];\n}\n\nexport function keywordIsASingleWord(keyword) {\n  return keyword.split(' ').length === 1 && !parseInt(keyword);\n}\n","import {\n  getMediaTypes,\n  setSelectedMediaTypes,\n  getFiltersAndUpdate,\n  getResponseData,\n  setError,\n} from './mediaData';\n\nimport { replaceProtocolExtension, fetchData, getItemByStringPattern } from '../utils';\n\nexport async function requestMedia(storage) {\n  const searchInputValue = document.getElementById('searchInput').value,\n    mediaTypes = getMediaTypes();\n  let requestURL = createRequestURL(searchInputValue, mediaTypes);\n  storage.mediaTypes = setSelectedMediaTypes(mediaTypes);\n  storage.searchValue = searchInputValue;\n  storage.responseData = [];\n\n  window.renderApp();\n\n  await getDataPages(storage, requestURL);\n  await getAndPrepareMetadataForRendering(storage);\n}\n\nexport async function requestCollectionAndMetadata(storage) {\n  if (!storage.isError) {\n    storage.flattenedData = getResponseData(storage);\n    if (!storage.flattenedData.length) storage.noResults = true;\n    const collectionData = await getCollectionData(storage.flattenedData, storage),\n      metadataFromLinks = await getMetadata(storage.flattenedData, collectionData, storage);\n    return metadataFromLinks;\n  }\n}\n\nasync function getDataPages(storage, requestURL) {\n  let pagesCounter = 0;\n  while (!storage.allRequestsMade) {\n    await fetch(requestURL)\n      .then(data => data.json())\n      .then(responseBody => {\n        if (responseBody.collection.links) {\n          const { nextPageLinkIndex, hasPage } = hasNextPage(responseBody.collection.links);\n          if (pagesCounter === 2 || !hasPage) {\n            storage.allRequestsMade = true;\n          } else {\n            requestURL = replaceProtocolExtension(\n              responseBody.collection.links[nextPageLinkIndex].href,\n            );\n            pagesCounter++;\n          }\n        } else {\n          storage.allRequestsMade = true;\n        }\n        storage.responseData = storage.responseData.concat(responseBody.collection.items);\n      })\n      .catch(err => {\n        setError(err, storage);\n      });\n  }\n}\n\nexport async function getAndPrepareMetadataForRendering(storage) {\n  const metadataFromLinks = await requestCollectionAndMetadata(storage);\n  await getFiltersAndUpdate(storage, metadataFromLinks);\n  window.renderApp();\n}\n\nfunction getCollectionData(data, storage) {\n  const requests = data.map(dataItem => fetchData(dataItem.href, storage));\n  return getAllPromisesData(requests, storage);\n}\n\nfunction getMetadataPromisesFromCollectionList(data, collectionData, storage) {\n  return collectionData.map((collectionDataItem, i) => {\n    const metadataLink = getItemByStringPattern('metadata.json', collectionDataItem);\n    data[i].metadata = replaceProtocolExtension(metadataLink);\n    return fetchData(data[i].metadata, storage);\n  });\n}\n\nfunction getMetadata(data, collectionData, storage) {\n  const metadataFetchedLinks = getMetadataPromisesFromCollectionList(data, collectionData, storage);\n  return getAllPromisesData(metadataFetchedLinks, storage);\n}\n\nfunction getAllPromisesData(data, storage) {\n  return Promise.all(data)\n    .then(responseData =>\n      Promise.all(responseData.map(responseDataItem => responseDataItem.json())),\n    )\n    .catch(err => {\n      setError(err, storage);\n    });\n}\n\nfunction hasNextPage(linksList) {\n  const nextPageLinkIndex = linksList.findIndex((linkItem, i) => linkItem.rel === 'next');\n  return nextPageLinkIndex !== -1\n    ? { hasPage: true, nextPageLinkIndex }\n    : { hasPage: false, nextPageLinkIndex };\n}\n\nfunction createRequestURL(searchInputValue, mediaTypes) {\n  const API_URL = 'https://images-api.nasa.gov/search';\n  return `${API_URL}?q=${searchInputValue}${\n    mediaTypes.length ? `&media_type=${mediaTypes.join(',')}` : ''\n  }`;\n}\n","import {\n  MEDIA_TYPE_SORTING_OPTIONS,\n  MEDATADA_KEYS_BY_MEDIA_TYPE,\n  SORTING_OPTIONS_TEXT,\n  FILTERS_TEXT,\n  FILTERS_BY_MEDIA_TYPE,\n  RESPONSE_DATA_FILES,\n} from './dataSettings';\nimport {\n  hasFilteringParameters,\n  getNumberFromString,\n  getSeconds,\n  getParametersValueFromNodeList,\n  removeClass,\n  addClass,\n  removeSpacesFromLink,\n  isElementInArray,\n  keywordIsASingleWord,\n} from '../utils';\nimport { requestMedia } from './imagesAPI';\nimport styles from '/style.css';\n\nexport function searchByTerm(storage, e) {\n  e.preventDefault();\n  resetState(storage);\n  storage.isDataLoading = true;\n  requestMedia(storage);\n}\n\nexport function openHomePage(storage, e) {\n  e.preventDefault();\n  storage.requestMade = false;\n  storage.searchValue = null;\n  storage.mediaTypes = [];\n  resetState(storage);\n  removeClass(`${styles.no_image__background}`, document.body);\n}\n\nexport function updateMediaTypes(storage, input) {\n  const inputIndex = storage.mediaTypes.indexOf(input.value);\n  if (inputIndex === -1) {\n    storage.mediaTypes.push(input.value);\n  } else {\n    storage.mediaTypes.splice(inputIndex, 1);\n  }\n}\n\nexport function sortMedia(storage, e) {\n  const data = storage.filtersSelected ? storage.filteredData : storage.flattenedData,\n    [option, direction] = e.target.value.split('_');\n  storage.sortingOption = e.target.value;\n  storage.sortingSet = true;\n  sortByDirection[direction](data, option);\n}\n\nexport function filterItems(storage) {\n  storage.performFiltering = true;\n  storage.filteredData = [];\n  storage.selectedFiltersList.forEach(filter => {\n    const categorie = filter.categorie;\n    storage.flattenedData.forEach(dataItem => {\n      if (storage.filteredData.indexOf(dataItem) === -1 && dataItem[categorie]) {\n        if (Array.isArray(dataItem[categorie])) {\n          if (isElementInArray(dataItem[categorie], filter.value)) {\n            storage.filteredData.push(dataItem);\n          }\n        } else {\n          if (dataItem[categorie].toUpperCase() === filter.value) {\n            storage.filteredData.push(dataItem);\n          }\n        }\n      }\n    });\n  });\n  storage.focusOnFilter = null;\n  storage.totalHits = storage.filteredData.length;\n}\n\nexport function selectFilter(storage, filter) {\n  const { value } = filter,\n    categorie = filter.getAttribute('data-categorie');\n  storage.filtersSelected = true;\n  if (!isFilterSelected(storage.selectedFiltersList, value, categorie)) {\n    storage.selectedFiltersList.push({ value, categorie });\n    storage.focusOnFilter = filter.name;\n  } else {\n    removeFilter(storage, filter);\n    storage.focusOnFilter = null;\n  }\n}\n\nexport function removeFilter(storage, filter) {\n  const { value: filterName } = filter,\n    categorie = filter.getAttribute('data-categorie'),\n    deleteIndex = storage.selectedFiltersList.findIndex(\n      element => element.value === filterName && categorie === element.categorie,\n    );\n  storage.focusOnFilter = null;\n  storage.selectedFiltersList.splice(deleteIndex, 1);\n  if (!storage.selectedFiltersList.length) {\n    storage.performFiltering = false;\n    storage.filtersSelected = false;\n    storage.totalHits = storage.flattenedData.length;\n  }\n}\n\nexport function updateFocusState() {\n  if (window.data.focusOnFilter !== null)\n    document.querySelector(`[name=\"${window.data.focusOnFilter}\"]`).focus();\n}\n\nexport function isFilterSelected(filtersSelected, filterName, categorie) {\n  return filtersSelected.some(\n    filter => filter.categorie === categorie && filter.value === filterName,\n  );\n}\n\nexport function isOptionNeeded(storage, option) {\n  return storage.mediaTypes.some(mediaType => {\n    return MEDIA_TYPE_SORTING_OPTIONS[mediaType].indexOf(option) !== -1;\n  });\n}\n\nexport const sortByDirection = {\n  ascending: function (data, option) {\n    data.sort((current, next) => (current[option] ? current[option] - next[option] : true));\n  },\n  descending: function (data, option) {\n    data.sort((current, next) => (current[option] ? next[option] - current[option] : true));\n  },\n};\n\nexport function getResponseData(storage) {\n  return getConciseContentFromRespond(storage.responseData);\n}\n\nfunction getConciseContentFromRespond(items) {\n  return items.map(item => {\n    const { data, href, links: [{ href: previewImage }] = [{ href: null }] } = item;\n    const {\n      keywords,\n      date_created,\n      center,\n      media_type,\n      title,\n      secondary_creator = null,\n      nasa_id,\n    } = data[0];\n    return {\n      keywords: getOnlySingleWordKeyword(keywords),\n      date: getSeconds(date_created),\n      id: nasa_id,\n      title,\n      center,\n      previewImage: removeSpacesFromLink(previewImage),\n      href,\n      mediaType: media_type,\n      creator: getCreatorsList(secondary_creator),\n    };\n  });\n}\n\nexport async function getFiltersAndUpdate(storage, metadata) {\n  await getFiltersFromMetadata(metadata, storage.flattenedData);\n  storage.isDataLoading = false;\n  changeStateToRequestMade(storage);\n  getFiltersFromLists(storage.flattenedData, storage.mediaTypes, storage.filters);\n  storage.totalHits = storage.flattenedData.length;\n}\n\nfunction getFiltersFromMetadata(metadata, data) {\n  return metadata.forEach((metadataItem, i) => {\n    getFiltersDataFromMetadata(metadataItem, data[i]);\n  });\n}\n\nfunction getFiltersDataFromMetadata(responseBody, dataItem) {\n  const mediaMetadata = responseBody,\n    mediaKeysNeeded = MEDATADA_KEYS_BY_MEDIA_TYPE[dataItem.mediaType];\n  Object.keys(mediaKeysNeeded).forEach(key => {\n    transformKeyValueToNumber(key, dataItem, mediaMetadata[mediaKeysNeeded[key]]);\n  });\n}\n\nfunction getFiltersFromLists(data, mediaTypes, filtersContainer) {\n  data.forEach(dataItem => {\n    mediaTypes.forEach(mediaType => {\n      FILTERS_BY_MEDIA_TYPE[mediaType].forEach(key => {\n        if (!filtersContainer[key]) {\n          filtersContainer[key] = {};\n        }\n        if (dataItem[key]) {\n          if (Array.isArray(dataItem[key])) {\n            dataItem[key].forEach(keyword => {\n              if (mediaType === dataItem.mediaType) {\n                updateFilterValue(filtersContainer[key], keyword);\n              }\n            });\n          } else {\n            updateFilterValue(filtersContainer[key], dataItem[key]);\n          }\n        }\n      });\n    });\n  });\n}\n\nfunction updateFilterValue(filtersContainer, keyword) {\n  if (keyword !== undefined) {\n    if (!filtersContainer[keyword.toUpperCase()]) {\n      filtersContainer[keyword.toUpperCase()] = 1;\n    } else {\n      filtersContainer[keyword.toUpperCase()]++;\n    }\n  }\n}\n\nexport function getMediaTypes() {\n  const mediaTypes = document.querySelectorAll('input[name=\"mediaType\"]:checked');\n  return getParametersValueFromNodeList('value', mediaTypes);\n}\n\nexport function setSelectedMediaTypes(mediaTypes) {\n  return mediaTypes.length ? mediaTypes : null;\n}\n\nfunction getOnlySingleWordKeyword(keywords) {\n  return keywords ? keywords.filter(keyword => keywordIsASingleWord(keyword)) : 'unknown';\n}\n\nfunction transformKeyValueToNumber(key, dataItem, metadataValue) {\n  if (metadataValue) {\n    switch (key) {\n      case 'album':\n        dataItem[key] = getImageAlbum(metadataValue);\n        break;\n      case 'duration':\n        dataItem[key] = getDurationValueFromString(metadataValue);\n        break;\n      case 'size':\n        dataItem[key] = getSizeInKBFromString(metadataValue);\n        dataItem[`${key}Value`] = dataItem[key].value;\n        break;\n      case 'bitrate':\n        dataItem[`${key}Value`] = getNumberFromString(metadataValue);\n        dataItem[key] = metadataValue;\n        break;\n      case 'resolution':\n        dataItem[key] = getResolutionFromString(metadataValue);\n        dataItem[`${key}Origin`] = metadataValue;\n        dataItem[`${key}Value`] = dataItem[key].height * dataItem[key].width;\n        break;\n      default:\n        dataItem[key] = metadataValue;\n    }\n  } else {\n    dataItem[key] = metadataValue;\n  }\n}\n\nfunction getCreatorsList(creator) {\n  return creator !== null ? splitStringWithDifferentSeparator(creator) : ['unknown'];\n}\n\nfunction getDurationValueFromString(duration) {\n  if (duration && duration !== null) {\n    const time = duration.match(/\\d{1,}:\\d{2}:\\d{2}/g);\n    return time !== null ? getSecondsFromDurationValue(time[0]) : undefined;\n  }\n  return undefined;\n}\n\nfunction getSecondsFromDurationValue(time) {\n  const separatedTimeValues = parseDuration(time),\n    [hours, minutes, seconds] = separatedTimeValues;\n  return hours * 3600 + minutes * 60 + seconds;\n}\n\nfunction parseDuration(time) {\n  return time.split(':').map(item => parseInt(item));\n}\n\nfunction getImageAlbum(value) {\n  return !value ? 'unknown' : value;\n}\n\nfunction getSizeInKBFromString(value) {\n  const [number, unit] = value.split(' ');\n  switch (unit.toUpperCase()) {\n    case 'KB':\n      return { number, unit, value: getNumberFromString(number) };\n    case 'MB':\n      return { number, unit, value: getNumberFromString(number) * 1024 };\n    case 'GB':\n      return { number, unit, value: getNumberFromString(number) * 1024 * 1024 };\n  }\n}\n\nfunction getResolutionFromString(value) {\n  const [height, width] = value.toLowerCase().split('x');\n  return { height: getNumberFromString(height), width: getNumberFromString(width), value };\n}\n\nfunction splitStringWithDifferentSeparator(stringToSplit) {\n  stringToSplit = stringToSplit.replace(/[<>]||(\\/>)/gm, '');\n  if (stringToSplit.indexOf('/') === -1) {\n    return stringToSplit.split(', ');\n  } else {\n    return stringToSplit.split('/');\n  }\n}\n\nexport function setError(errMessage, storage) {\n  storage.isDataLoading = false;\n  storage.allRequestsMade = true;\n  storage.isError = true;\n  storage.errorMessage = `Ooops!..${errMessage}.<br/>Try to reload the page`;\n  window.renderApp();\n}\n\nexport function resetState(storage) {\n  storage.totalHits = null;\n  storage.sortingSet = false;\n  storage.requestMade = false;\n  storage.focusOnFilter = null;\n  storage.selectedFiltersList = [];\n  storage.performFiltering = false;\n  storage.filtersSelected = false;\n  storage.filters = {};\n  storage.noResults = false;\n  storage.allRequestsMade = false;\n}\n\nfunction changeStateToRequestMade(storage) {\n  storage.requestMade = true;\n  addClass(`${styles.no_image__background}`, document.body);\n}\n","import { updateFocusState } from '../data/mediaData';\n\nlet Component, Target;\n\nexport default function renderApp(componentFunction, targetElementId) {\n  if (componentFunction) Component = componentFunction;\n  if (targetElementId) Target = targetElementId;\n  document.getElementById(Target).innerHTML = `\n        ${Component()}\n    `;\n  updateFocusState();\n}\n","import styles from './style.css';\n\nexport default function MediaTypeSwitcher(storage) {\n  return `\n  <label for=\"mediaSwitcherButton\" class=\"${styles.label} ${styles.overflow}\">\n  ${storage.mediaTypes.length ? storage.mediaTypes.join(', ') : 'Media type'}\n  </label>\n  <input type=\"checkbox\" class=\"${styles.button}\" id=\"mediaSwitcherButton\">\n  <div class=\"${styles.wrapper}\">\n    ${['image', 'audio', 'video']\n      .map(mediaType => {\n        return `\n          <div>\n            <input type=\"checkbox\" \n                         class=\"${styles.mediaType}\"\n                         name=\"mediaType\" \n                         onchange=\"updateMediaTypes(window.data, this);window.renderApp()\"\n                         id=\"${mediaType}\" \n                         value=\"${mediaType}\"\n                         ${\n                           storage.mediaTypes.length && storage.mediaTypes.indexOf(mediaType) !== -1\n                             ? `checked`\n                             : ``\n                         }>\n            <label for=\"${mediaType}\">${mediaType}</label>\n          </div>\n          `;\n      })\n      .join('')}\n  </div>`;\n}\n","export { default } from './MediaTypeSwitcher';\n","import styles from './style.css';\n\nexport default function SearchInput(storage) {\n  return `<input type=\"text\" \n                 id=\"searchInput\" \n                 placeholder='Search for ... (e.g. \"Sun\")'\n                 class=\"${styles.search__input}\"\n                 onchange=\"window.data.searchValue = this.value;window.renderApp()\"\n                 value=\"${storage.searchValue !== null ? storage.searchValue : ``}\">`;\n}\n","export { default } from './SearchInput';\n","import styles from './style.css';\n\nexport default function SearchButton() {\n  return `<button class=\"${styles.search__button}\" ${\n    !window.data.mediaTypes.length || !window.data.searchValue ? `disabled=\"disabled\"` : ''\n  }>search</button>`;\n}\n","export { default } from './SearchButton';\n","import styles from './style.css';\n\nexport default function Logo() {\n  return `\n    <a href=\"/\" onclick=\"window.openHomePage(window.data, event); window.renderApp()\">\n      <img src=\"${require('../../../assets/logo.svg')}\"  class=\"${styles.logo}\">\n    </a>`;\n}\n","export { default } from './Logo';\n","import styles from './style.css';\nimport MediaTypeSwitcher from '../MediaTypeSwitcher';\nimport SearchInput from '../SearchInput';\nimport SearchButton from '../SearchButton';\nimport Logo from '../Logo';\n\nexport default function SearchLayout(searchPosition) {\n  return `\n    <div class=\"${styles.form__wrapper} ${\n    searchPosition === 'top' ? `${styles.form_top}` : `${styles.form_middle}`\n  }\">\n    ${searchPosition === 'top' ? Logo() : ``}\n    <form onsubmit=\"window.searchByTerm(window.data, event);\" id=\"searchForm\" class=\"${\n      styles.form\n    }\">    \n      <div class=\"${styles.search__box}\">    \n        ${MediaTypeSwitcher(window.data)}\n        ${SearchInput(window.data)}\n      </div>\n        ${SearchButton()}\n    </form>\n    </div>`;\n}\n","export { default } from './SearchLayout';\n","import styles from './style.css';\nimport { isFilterSelected } from '../../data/mediaData.js';\n\nexport default function FilterItem(filterName, filterCounter, categorie) {\n  return `\n    <label class=\"${styles.filter__label}\"> \n      <input value=\"${filterName}\" \n        name=\"${filterName}\"\n        data-categorie=\"${categorie}\" \n        type=\"checkbox\"\n        ${\n          isFilterSelected(window.data.selectedFiltersList, filterName, categorie)\n            ? `checked=\"checked\"`\n            : ``\n        }\n        onchange=\"window.selectFilter(window.data, this); renderApp();\">\n      <span class=\"${styles.text}\">${filterName} </span>\n      <span class=\"${styles.filter__counter}\">(${filterCounter})</span>      \n    </label>\n  `;\n}\n","import styles from './style.css';\nimport { FILTERS_TEXT } from '../../data/dataSettings';\nimport FilterItem from './FilterItem';\n\nexport default function FilterBlock(filtersContainer, filterName) {\n  return `<h3 class=\"${styles.filter__heading}\">${FILTERS_TEXT[filterName]}</h3>\n            <div class=\"${styles.filter__item_wrapper}\">\n              ${Object.keys(filtersContainer[filterName])\n                .map(filterContent => {\n                  return FilterItem(\n                    filterContent,\n                    filtersContainer[filterName][filterContent],\n                    filterName,\n                  );\n                })\n                .join('')}\n            </div>`;\n}\n","import styles from './style.css';\nimport { hasFilteringParameters } from '../../utils.js';\nimport FilterBlock from './FilterBlock';\n\nexport default function Filters(filtersContainer) {\n  return Object.keys(filtersContainer)\n    .map(filterName => {\n      if (hasFilteringParameters(filtersContainer[filterName])) {\n        return `${FilterBlock(filtersContainer, filterName)}`;\n      }\n      return '';\n    })\n    .join('');\n}\n","import styles from './style.css';\nimport Filters from './Filters';\n\nexport default function FiltersByCategories() {\n  return window.data.noResults\n    ? ''\n    : `\n  <form id=\"filters\" class=\"${styles.filters__wrapper}\">\n    ${Filters(window.data.filters)}\n  </form>`;\n}\n","export { default } from './FiltersByCategories';\n","import styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\n\nexport default function Option(storage, option, sortType) {\n  return `<option \n              value=\"${option}_${sortType}\" \n              class=\"${styles.option}\"\n              ${\n                storage.sortingSet && storage.sortingOption === `${option}_${sortType}`\n                  ? `selected=\"selected\"`\n                  : ''\n              }\"\n              >\n                ${SORTING_OPTIONS_TEXT[option]}  \n                ${sortType === 'ascending' ? '&#8593;' : '&#8595;'}\n            </option>`;\n}\n","import styles from './style.css';\nimport { SORTING_OPTIONS_TEXT } from '../../data/dataSettings';\nimport { isOptionNeeded } from '../../data/mediaData';\nimport Option from './Option';\n\nexport default function SortOptions(storage) {\n  return Object.keys(SORTING_OPTIONS_TEXT)\n    .map(option => {\n      if (isOptionNeeded(storage, option)) {\n        return ['ascending', 'descending']\n          .map(sortType => {\n            return `${Option(storage, option, sortType)}`;\n          })\n          .join('');\n      }\n    })\n    .join('');\n}\n","import styles from './style.css';\nimport SortOptions from './SortOptions';\n\nexport default function SortSelect() {\n  return `\n  <label>Sort by:\n    <select name=\"mediaSort\"  \n      id=\"mediaSort\" \n      onchange=\"window.sortMedia(window.data, event); window.renderApp()\">\n      ${SortOptions(window.data)}\n    </select>\n  </label>`;\n}\n","export { default } from './SortSelect';\n","import styles from './style.css';\n\nexport default function SelectedFilter(filterSelected) {\n  return `<div class=\"${styles.filter__selected_container}\">\n            <span class=\"${styles.filter__selected}\">${filterSelected.categorie}: ${filterSelected.value}</span>\n            <button class=\"${styles.remove__filter}\" \n              onclick=\"window.removeFilter(window.data, this); renderApp();\" \n              value=\"${filterSelected.value}\" data-categorie=\"${filterSelected.categorie}\">x</button>\n          </div>`;\n}\n","import styles from './style.css';\nimport SelectedFilter from './SelectedFilter';\n\nexport default function SelectedFilters(storage) {\n  return `${storage.selectedFiltersList.map(filter => SelectedFilter(filter)).join('')}`;\n}\n","import styles from './style.css';\n\nexport default function FilterButton() {\n  return `<button onclick='window.filterItems(window.data);renderApp()' \n            class=\"${styles.filter__button}\">Apply filters</button>`;\n}\n","import styles from './style.css';\nimport SelectedFilters from './SelectedFilters';\nimport FilterButton from './FilterButton';\n\nexport default function SelectedFiltersLayout(storage) {\n  return `<div class=\"${styles.selected__filters}\">\n      ${storage.filtersSelected ? SelectedFilters(storage) : ''}\n      ${storage.selectedFiltersList.length ? FilterButton() : ''}\n    </div>`;\n}\n","export { default } from './SelectedFiltersLayout';\n","import styles from './style.css';\n\nexport default function Card(dataItem) {\n  return `\n  <div class=\"${styles.card__item} \n    ${\n      dataItem.mediaType === 'audio'\n        ? `${styles.audio}`\n        : dataItem.mediaType === 'video'\n        ? `${styles.video}`\n        : `${styles.image}`\n    }\" \n    id=\"${dataItem.id}\"\n    data-background=\"${dataItem.previewImage}\"\n    style=\"background-image: url(\n    ${\n      dataItem.previewImage !== null ? dataItem.previewImage : require('../../../assets/audio.svg')\n    })\" \n    data-title=\"${dataItem.title}\">\n  </div>`;\n}\n","import styles from './style.css';\nimport Card from './Card';\n\nexport default function MediaCards(storage) {\n  const data = !storage.performFiltering ? storage.flattenedData : storage.filteredData;\n  return `${data.map(dataItem => Card(dataItem)).join('')}`;\n}\n","export { default } from './MediaCards';\n","import styles from './style.css';\n\nexport default function NoResults() {\n  return `\n  <div class=\"${styles.wrap}\">\n    <h2 class=\"${styles.no_results}\"\">No results found :(</h2>\n  </div>`;\n}\n","export { default } from './NoResults';\n","import styles from './style.css';\nimport SortSelect from '../SortSelect';\nimport SelectedFiltersLayout from '../SelectedFiltersLayout';\nimport MediaCards from '../MediaCards';\nimport NoResults from '../NoResults';\n//TODO: fix searchValue update when input is changed\nexport default function ResponseContent() {\n  return !window.data.noResults\n    ? `\n  <div class=\"${styles.cards__wrapper}\" id=\"cardsWrapper\">\n    <div class=\"${styles.sort_hits_wrapper}\">\n      <h3 class=\"${styles.total_hits}\">\n        Total hits ${window.data.totalHits} for ${window.data.searchValue}\n      </h3>  \n      ${SortSelect()}\n    </div>\n    ${SelectedFiltersLayout(window.data)}\n    ${MediaCards(window.data)}\n  </div>\n  `\n    : NoResults();\n}\n","import styles from './style.css';\nimport SearchLayout from '../SearchLayout';\nimport FiltersByCategories from '../FiltersByCategories';\nimport ResponseContent from './ResponseContent';\n\nexport default function ResponseLayout(searchPosition) {\n  return `\n  ${SearchLayout(searchPosition)}\n  <div class=\"${styles.response__layout}\">\n   <br>\n   ${FiltersByCategories()}\n   <br>\n   ${ResponseContent()}\n  </div>`;\n}\n","export { default } from './ResponseLayout';\n","import styles from './style.css';\n\nexport default function Loader(str) {\n  return `<div class=\"${styles.loader}\"data-text=\"${str}\"></div>`;\n}\n","export { default } from './Loader';\n","import ResponseLayout from '../ResponseLayout';\nimport Loader from '../Loader';\nimport SearchLayout from '../SearchLayout';\n\nexport default function App() {\n  return `${\n    window.data.requestMade\n      ? ResponseLayout('top')\n      : window.data.isDataLoading\n      ? Loader('')\n      : window.data.isError\n      ? Loader(window.data.errorMessage)\n      : SearchLayout('middle')\n  }`;\n}\n","export { default } from './App';\n","import { dataStore } from './data/dataStore.js';\nimport styles from './style.css';\nimport renderApp from './framework/renderer';\nimport App from './components/App';\nimport {\n  updateMediaTypes,\n  selectFilter,\n  sortMedia,\n  filterItems,\n  removeFilter,\n  searchByTerm,\n  openHomePage,\n} from './data/mediaData';\n//todo add pagination\nwindow.data = dataStore;\n\nwindow.renderApp = renderApp;\nwindow.openHomePage = openHomePage;\nwindow.searchByTerm = searchByTerm;\nwindow.updateMediaTypes = updateMediaTypes;\nwindow.selectFilter = selectFilter;\nwindow.sortMedia = sortMedia;\nwindow.filterItems = filterItems;\nwindow.removeFilter = removeFilter;\n\nwindow.renderApp(App, 'app-root');\n"]}